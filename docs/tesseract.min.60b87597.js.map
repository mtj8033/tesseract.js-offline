{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","webpack://Tesseract/src/common/TesseractJob.js","webpack://Tesseract/webpack/universalModuleDefinition","webpack://Tesseract/webpack/bootstrap","webpack://Tesseract/node_modules/buffer/index.js","webpack://Tesseract/node_modules/process/browser.js","webpack://Tesseract/node_modules/resolve-url/resolve-url.js","webpack://Tesseract/node_modules/check-types/src/check-types.js","webpack://Tesseract/src/browser/index.js","webpack://Tesseract/src/index.js","webpack://Tesseract/node_modules/tesseract.js-utils/src/index.browser.js","webpack://Tesseract/node_modules/tesseract.js-utils/src/common/browser/cache.js","webpack://Tesseract/node_modules/idb-keyval/dist/idb-keyval.mjs","webpack://Tesseract/node_modules/tesseract.js-utils/src/loadLang.js","webpack://Tesseract/node_modules/tesseract.js-utils/node_modules/is-url/index.js","webpack://Tesseract/node_modules/tesseract.js-utils/src/common/browser/fetch.js","webpack://Tesseract/node_modules/tesseract.js-utils/src/common/browser/gunzip.js","webpack://Tesseract/node_modules/zlibjs/bin/node-zlib.js","webpack://Tesseract/(webpack)/buildin/global.js","webpack://Tesseract/node_modules/base64-js/index.js","webpack://Tesseract/node_modules/ieee754/index.js","webpack://Tesseract/node_modules/isarray/index.js","webpack://Tesseract/node_modules/tesseract.js-utils/src/readImage.js","webpack://Tesseract/node_modules/bmp-js/index.js","webpack://Tesseract/node_modules/bmp-js/lib/encoder.js","webpack://Tesseract/node_modules/bmp-js/lib/decoder.js","webpack://Tesseract/node_modules/file-type/index.js","webpack://Tesseract/src/common/TesseractWorker.js","webpack://Tesseract/src/common/options.js","webpack://Tesseract/src/common/circularize.js"],"names":["data","root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","base64","ieee754","isArray","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","this","Error","allocUnsafe","from","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","string","encoding","isEncoding","actual","write","slice","obj","isBuffer","len","checked","copy","buffer","val","type","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","latin1Write","base64Write","ucs2Write","units","hi","lo","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","src","dst","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","Item","noop","nextTick","args","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","numUrls","base","document","createElement","href","head","getElementsByTagName","insertBefore","firstChild","resolved","index","removeChild","globals","strings","messages","predicates","functions","assert","not","maybe","collections","neginf","posinf","haveSymbols","assigned","number","integer","greater","lhs","rhs","less","greaterOrEqual","lessOrEqual","nonEmptyString","instanceStrict","error","arrayLike","isFunction","testArray","result","testObject","mixin","source","keys","forEach","assertModifier","predicate","defaultMessage","argCount","message","ErrorType","assertImpl","notModifier","modifiedPredicate","notImpl","ofModifier","collection","map","item","ignore","createModifiedPredicates","modifier","createModifiedFunctions","shift","pop","writable","createModifiedModifier","modified","createOfModifiers","of","v","al","f","iterator","iteration","values","next","done","substring","regex","constructor","like","archetype","Date","getTime","hasLength","mapComplex","all","any","NEGATIVE_INFINITY","POSITIVE_INFINITY","check","resolveURL","defaultOptions","readFromBlobOrFile","blob","fileReader","FileReader","onload","readAsArrayBuffer","loadImage","image","fetch","then","resp","arrayBuffer","instance","HTMLElement","tagName","poster","Promise","toBlob","File","reject","workerPath","TESS_ENV","random","corePath","WebAssembly","spawnWorker","worker","Blob","URL","Worker","createObjectURL","onmessage","recv","terminateWorker","terminate","sendPacket","iPacket","packet","payload","img","postMessage","utils","TesseractWorker","cache","loadLang","gunzip","readImage","del","readCache","writeCache","deleteCache","checkCache","path","__webpack_exports__","Store","clear","[object Object]","dbName","storeName","_dbp","resolve","openreq","indexedDB","open","onerror","onsuccess","onupgradeneeded","createObjectStore","callback","db","transaction","oncomplete","onabort","objectStore","store","getDefaultStore","req","_withIDBStore","put","delete","openKeyCursor","openCursor","continue","isURL","handleLang","TessModule","dataPath","cachePath","cacheMethod","lang","FS","mkdir","err","writeFile","langs","options","split","langPath","catch","fetchTrainedData","iLangPath","protocolAndDomainRE","everythingAfterProtocol","localhostDomainRE","test","nonLocalhostDomainRE","gunzipSync","q","B","Uint16Array","Uint32Array","DataView","G","k","g","I","finish","L","aa","ba","R","ca","ha","S","ia","ja","ka","T","h","na","oa","F","input","lazy","compressionType","outputBuffer","outputIndex","getParent","U","pa","NONE","X","qa","va","N","w","C","u","ra","M","z","Y","da","Fa","ea","Ga","la","Ha","Z","ma","E","Ia","D","qb","ta","ua","sa","O","A","fa","H","Ja","Ka","K","J","P","Q","Na","ga","wa","Oa","Pa","Qa","Ra","La","Ma","xa","ya","za","Ba","flags","filename","comment","deflateOptions","fname","Ca","fcomment","Da","fhcrc","Ea","now","Sa","V","Ta","bufferSize","bufferType","resize","Ua","W","Va","Wa","Xa","Ya","$","ib","Za","$a","ab","bb","cb","eb","fb","gb","hb","kb","lb","jb","mb","nb","ob","verify","pb","method","rb","sb","ub","Bb","wb","noBuffer","yb","Ab","LOG2E","log","deflate","deflateSync","inflate","inflateSync","gzip","gzipSync","Function","eval","b64","placeHoldersCount","tmp","placeHolders","Arr","revLookup","uint8","extraBytes","output","parts","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","bmp","fileType","iBuf","yres","bytesPerPixel","pix","mime","bmpBuf","decode","_malloc","BYTES_PER_ELEMENT","HEAPU8","width","height","ptr","_pixReadMem","getValue","setValue","idx","encode","BmpEncoder","imgData","rgbSize","headerInfoSize","flag","reserved","fileSize","planes","bitPP","compress","hr","vr","colors","importantColors","tempBuffer","rowBytes","fillOffset","quality","BmpDecoder","is_with_alpha","bottom_up","parseHeader","parseRGBA","headerSize","rawSize","palette","blue","green","red","quad","bitn","bit1","xlen","ceil","line","location","rgb","bit4","lines","low_nibble","setPixelData","rgbIndex","before","after","bit8","bit15","dif_w","_1_5","alpha","bit16","maskRed","maskGreen","maskBlue","mask0","bit24","bit32","getData","bmpData","toBytes","xpiZipFilename","oxmlContentTypes","oxmlRels","readUInt64LE","header","assign","mask","checkString","findNextZipHeaderIndex","startAt","findIndex","el","zipHeaderIndex","oxmlFound","sliced","idPos","docTypePos","findDocType","every","objectSize","default","stream","readableStream","pass","PassThrough","chunk","minimumBytes","unshift","pipeline","pipe","adapter","circularize","TesseractJob","_currentJob","_queue","params","_sendJob","id","jobId","handle","status","action","console","warn","_delay","job","send","fn","null","dequeue","iPage","page","paragraphs","words","symbols","blocks","iBlock","block","iPara","para","iLine","paragraph","iWord","word","iSym","sym","jobCounter","_worker","_resolve","_reject","_progress","_finally","runFinallyCbs"],"mappings":"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","file":"tesseract.min.60b87597.js","sourceRoot":"..\\browser","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\n *\n * The job exectued by worker, each job is basically a recognition of an image.\n *\n * @fileoverview Job excuted by Worker\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst adapter = require('../node/');\n\n/** A global job counter as part of job id */\nlet jobCounter = 0;\n\nclass TesseractJob {\n  /**\n   * constructor\n   *\n   * @name constructor\n   * @function initial a TesseractJob\n   * @access public\n   * @param {object} worker - An instance of TesseractWorker\n   */\n  constructor(worker) {\n    jobCounter += 1;\n    this.id = `Job-${jobCounter}-${Math.random().toString(16).slice(3, 8)}`;\n\n    this._worker = worker;\n\n    /**\n     * As all the callback functions are saved in an array.\n     * Basically you can register more than callback function\n     * for then, catch, progress and finally.\n     */\n    this._resolve = [];\n    this._reject = [];\n    this._progress = [];\n    this._finally = [];\n  }\n\n  /**\n   * then\n   *\n   * @name then\n   * @function A function to chain like Promise\n   * @access public\n   * @param {function} resolve - called when the job succeeds\n   * @param {function} reject - called when the job fails\n   */\n  then(resolve, reject) {\n    if (this._resolve.push) {\n      this._resolve.push(resolve);\n    } else {\n      resolve(this._resolve);\n    }\n\n    if (reject) this.catch(reject);\n    return this;\n  }\n\n  /**\n   * catch\n   *\n   * @name catch\n   * @function register a function to call when there is an error\n   * @access public\n   * @param {function} reject - callback function for error\n   */\n  catch(reject) {\n    if (this._reject.push) {\n      this._reject.push(reject);\n    } else {\n      reject(this._reject);\n    }\n    return this;\n  }\n\n  /**\n   * progress\n   *\n   * @name progress\n   * @function register a function to show progress of the recognition,\n   *   use res.progress to print the message\n   * @access public\n   * @param {function} fn - callback function for progress information\n   */\n  progress(fn) {\n    this._progress.push(fn);\n    return this;\n  }\n\n  /**\n   * finally\n   *\n   * @name finally\n   * @function registry a callback function for final\n   * @access public\n   * @param {function} fn - callback function for final\n   */\n  finally(fn) {\n    this._finally.push(fn);\n    return this;\n  }\n\n  /**\n   * send\n   *\n   * @name send\n   * @function send specific action with payload a worker\n   * @access public\n   * @param {string} action - action to trigger, should be \"recognize\" or \"detect\"\n   * @param {object} payload - data to be consumed\n   */\n  send(action, payload) {\n    adapter.sendPacket(this._worker, {\n      jobId: this.id,\n      action,\n      payload,\n    });\n  }\n\n  /**\n   * handle\n   *\n   * @name handle\n   * @function execute packet action\n   * @access public\n   * @param {object} packet action and payload to handle\n   */\n  handle(packet) {\n    const { data } = packet;\n    let runFinallyCbs = false;\n\n    if (packet.status === 'resolve') {\n      if (this._resolve.length === 0) console.log(data);\n      this._resolve.forEach((fn) => {\n        const ret = fn(data);\n        if (ret && typeof ret.then === 'function') {\n          console.warn('TesseractJob instances do not chain like ES6 Promises. To convert it into a real promise, use Promise.resolve.');\n        }\n      });\n      this._resolve = data;\n      this._worker.dequeue();\n      runFinallyCbs = true;\n    } else if (packet.status === 'reject') {\n      if (this._reject.length === 0) console.error(data);\n      this._reject.forEach(fn => fn(data));\n      this._reject = data;\n      this._worker.dequeue();\n      runFinallyCbs = true;\n    } else if (packet.status === 'progress') {\n      this._progress.forEach(fn => fn(data));\n    } else {\n      console.warn('Message type unknown', packet.status);\n    }\n\n    if (runFinallyCbs) {\n      this._finally.forEach(fn => fn(data));\n    }\n  }\n}\n\nmodule.exports = TesseractJob;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tesseract\"] = factory();\n\telse\n\t\troot[\"Tesseract\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright 2014 Simon Lydell\r\n// X11 (“MIT”) Licensed. (See LICENSE.)\r\n\r\nvoid (function(root, factory) {\r\n  if (typeof define === \"function\" && define.amd) {\r\n    define(factory)\r\n  } else if (typeof exports === \"object\") {\r\n    module.exports = factory()\r\n  } else {\r\n    root.resolveUrl = factory()\r\n  }\r\n}(this, function() {\r\n\r\n  function resolveUrl(/* ...urls */) {\r\n    var numUrls = arguments.length\r\n\r\n    if (numUrls === 0) {\r\n      throw new Error(\"resolveUrl requires at least one argument; got none.\")\r\n    }\r\n\r\n    var base = document.createElement(\"base\")\r\n    base.href = arguments[0]\r\n\r\n    if (numUrls === 1) {\r\n      return base.href\r\n    }\r\n\r\n    var head = document.getElementsByTagName(\"head\")[0]\r\n    head.insertBefore(base, head.firstChild)\r\n\r\n    var a = document.createElement(\"a\")\r\n    var resolved\r\n\r\n    for (var index = 1; index < numUrls; index++) {\r\n      a.href = arguments[index]\r\n      resolved = a.href\r\n      base.href = resolved\r\n    }\r\n\r\n    head.removeChild(base)\r\n\r\n    return resolved\r\n  }\r\n\r\n  return resolveUrl\r\n\r\n}));\r\n","/*globals define, module, Symbol */\n/*jshint -W056 */\n\n(function (globals) {\n  'use strict';\n\n  var strings, messages, predicates, functions, assert, not, maybe,\n      collections, slice, neginf, posinf, isArray, haveSymbols;\n\n  strings = {\n    v: 'value',\n    n: 'number',\n    s: 'string',\n    b: 'boolean',\n    o: 'object',\n    t: 'type',\n    a: 'array',\n    al: 'array-like',\n    i: 'iterable',\n    d: 'date',\n    f: 'function',\n    l: 'length'\n  };\n\n  messages = {};\n  predicates = {};\n\n  [\n    { n: 'equal', f: equal, s: 'v' },\n    { n: 'undefined', f: isUndefined, s: 'v' },\n    { n: 'null', f: isNull, s: 'v' },\n    { n: 'assigned', f: assigned, s: 'v' },\n    { n: 'primitive', f: primitive, s: 'v' },\n    { n: 'includes', f: includes, s: 'v' },\n    { n: 'zero', f: zero },\n    { n: 'infinity', f: infinity },\n    { n: 'number', f: number },\n    { n: 'integer', f: integer },\n    { n: 'even', f: even },\n    { n: 'odd', f: odd },\n    { n: 'greater', f: greater },\n    { n: 'less', f: less },\n    { n: 'between', f: between },\n    { n: 'greaterOrEqual', f: greaterOrEqual },\n    { n: 'lessOrEqual', f: lessOrEqual },\n    { n: 'inRange', f: inRange },\n    { n: 'positive', f: positive },\n    { n: 'negative', f: negative },\n    { n: 'string', f: string, s: 's' },\n    { n: 'emptyString', f: emptyString, s: 's' },\n    { n: 'nonEmptyString', f: nonEmptyString, s: 's' },\n    { n: 'contains', f: contains, s: 's' },\n    { n: 'match', f: match, s: 's' },\n    { n: 'boolean', f: boolean, s: 'b' },\n    { n: 'object', f: object, s: 'o' },\n    { n: 'emptyObject', f: emptyObject, s: 'o' },\n    { n: 'nonEmptyObject', f: nonEmptyObject, s: 'o' },\n    { n: 'instanceStrict', f: instanceStrict, s: 't' },\n    { n: 'instance', f: instance, s: 't' },\n    { n: 'like', f: like, s: 't' },\n    { n: 'array', f: array, s: 'a' },\n    { n: 'emptyArray', f: emptyArray, s: 'a' },\n    { n: 'nonEmptyArray', f: nonEmptyArray, s: 'a' },\n    { n: 'arrayLike', f: arrayLike, s: 'al' },\n    { n: 'iterable', f: iterable, s: 'i' },\n    { n: 'date', f: date, s: 'd' },\n    { n: 'function', f: isFunction, s: 'f' },\n    { n: 'hasLength', f: hasLength, s: 'l' },\n  ].map(function (data) {\n    var n = data.n;\n    messages[n] = 'Invalid ' + strings[data.s || 'n'];\n    predicates[n] = data.f;\n  });\n\n  functions = {\n    apply: apply,\n    map: map,\n    all: all,\n    any: any\n  };\n\n  collections = [ 'array', 'arrayLike', 'iterable', 'object' ];\n  slice = Array.prototype.slice;\n  neginf = Number.NEGATIVE_INFINITY;\n  posinf = Number.POSITIVE_INFINITY;\n  isArray = Array.isArray;\n  haveSymbols = typeof Symbol === 'function';\n\n  functions = mixin(functions, predicates);\n  assert = createModifiedPredicates(assertModifier, assertImpl);\n  not = createModifiedPredicates(notModifier, notImpl);\n  maybe = createModifiedPredicates(maybeModifier, maybeImpl);\n  assert.not = createModifiedModifier(assertModifier, not);\n  assert.maybe = createModifiedModifier(assertModifier, maybe);\n\n  collections.forEach(createOfPredicates);\n  createOfModifiers(assert, assertModifier);\n  createOfModifiers(not, notModifier);\n  collections.forEach(createMaybeOfModifiers);\n\n  exportFunctions(mixin(functions, {\n    assert: assert,\n    not: not,\n    maybe: maybe\n  }));\n\n  /**\n   * Public function `equal`.\n   *\n   * Returns true if `lhs` and `rhs` are strictly equal, without coercion.\n   * Returns false otherwise.\n   */\n  function equal (lhs, rhs) {\n    return lhs === rhs;\n  }\n\n  /**\n   * Public function `undefined`.\n   *\n   * Returns true if `data` is undefined, false otherwise.\n   */\n  function isUndefined (data) {\n    return data === undefined;\n  }\n\n  /**\n   * Public function `null`.\n   *\n   * Returns true if `data` is null, false otherwise.\n   */\n  function isNull (data) {\n    return data === null;\n  }\n\n  /**\n   * Public function `assigned`.\n   *\n   * Returns true if `data` is not null or undefined, false otherwise.\n   */\n  function assigned (data) {\n    return data !== undefined && data !== null;\n  }\n\n  /**\n   * Public function `primitive`.\n   *\n   * Returns true if `data` is a primitive type, false otherwise.\n   */\n  function primitive (data) {\n    var type;\n\n    switch (data) {\n      case null:\n      case undefined:\n      case false:\n      case true:\n        return true;\n    }\n\n    type = typeof data;\n    return type === 'string' || type === 'number' || (haveSymbols && type === 'symbol');\n  }\n\n  /**\n   * Public function `zero`.\n   *\n   * Returns true if `data` is zero, false otherwise.\n   */\n  function zero (data) {\n    return data === 0;\n  }\n\n  /**\n   * Public function `infinity`.\n   *\n   * Returns true if `data` is positive or negative infinity, false otherwise.\n   */\n  function infinity (data) {\n    return data === neginf || data === posinf;\n  }\n\n  /**\n   * Public function `number`.\n   *\n   * Returns true if `data` is a number, false otherwise.\n   */\n  function number (data) {\n    return typeof data === 'number' && data > neginf && data < posinf;\n  }\n\n  /**\n   * Public function `integer`.\n   *\n   * Returns true if `data` is an integer, false otherwise.\n   */\n  function integer (data) {\n    return typeof data === 'number' && data % 1 === 0;\n  }\n\n  /**\n   * Public function `even`.\n   *\n   * Returns true if `data` is an even number, false otherwise.\n   */\n  function even (data) {\n    return typeof data === 'number' && data % 2 === 0;\n  }\n\n  /**\n   * Public function `odd`.\n   *\n   * Returns true if `data` is an odd number, false otherwise.\n   */\n  function odd (data) {\n    return integer(data) && data % 2 !== 0;\n  }\n\n  /**\n   * Public function `greater`.\n   *\n   * Returns true if `lhs` is a number greater than `rhs`, false otherwise.\n   */\n  function greater (lhs, rhs) {\n    return number(lhs) && lhs > rhs;\n  }\n\n  /**\n   * Public function `less`.\n   *\n   * Returns true if `lhs` is a number less than `rhs`, false otherwise.\n   */\n  function less (lhs, rhs) {\n    return number(lhs) && lhs < rhs;\n  }\n\n  /**\n   * Public function `between`.\n   *\n   * Returns true if `data` is a number between `x` and `y`, false otherwise.\n   */\n  function between (data, x, y) {\n    if (x < y) {\n      return greater(data, x) && data < y;\n    }\n\n    return less(data, x) && data > y;\n  }\n\n  /**\n   * Public function `greaterOrEqual`.\n   *\n   * Returns true if `lhs` is a number greater than or equal to `rhs`, false\n   * otherwise.\n   */\n  function greaterOrEqual (lhs, rhs) {\n    return number(lhs) && lhs >= rhs;\n  }\n\n  /**\n   * Public function `lessOrEqual`.\n   *\n   * Returns true if `lhs` is a number less than or equal to `rhs`, false\n   * otherwise.\n   */\n  function lessOrEqual (lhs, rhs) {\n    return number(lhs) && lhs <= rhs;\n  }\n\n  /**\n   * Public function `inRange`.\n   *\n   * Returns true if `data` is a number in the range `x..y`, false otherwise.\n   */\n  function inRange (data, x, y) {\n    if (x < y) {\n      return greaterOrEqual(data, x) && data <= y;\n    }\n\n    return lessOrEqual(data, x) && data >= y;\n  }\n\n  /**\n   * Public function `positive`.\n   *\n   * Returns true if `data` is a positive number, false otherwise.\n   */\n  function positive (data) {\n    return greater(data, 0);\n  }\n\n  /**\n   * Public function `negative`.\n   *\n   * Returns true if `data` is a negative number, false otherwise.\n   */\n  function negative (data) {\n    return less(data, 0);\n  }\n\n  /**\n   * Public function `string`.\n   *\n   * Returns true if `data` is a string, false otherwise.\n   */\n  function string (data) {\n    return typeof data === 'string';\n  }\n\n  /**\n   * Public function `emptyString`.\n   *\n   * Returns true if `data` is the empty string, false otherwise.\n   */\n  function emptyString (data) {\n    return data === '';\n  }\n\n  /**\n   * Public function `nonEmptyString`.\n   *\n   * Returns true if `data` is a non-empty string, false otherwise.\n   */\n  function nonEmptyString (data) {\n    return string(data) && data !== '';\n  }\n\n  /**\n   * Public function `contains`.\n   *\n   * Returns true if `data` is a string that contains `substring`, false\n   * otherwise.\n   */\n  function contains (data, substring) {\n    return string(data) && data.indexOf(substring) !== -1;\n  }\n\n  /**\n   * Public function `match`.\n   *\n   * Returns true if `data` is a string that matches `regex`, false otherwise.\n   */\n  function match (data, regex) {\n    return string(data) && !! data.match(regex);\n  }\n\n  /**\n   * Public function `boolean`.\n   *\n   * Returns true if `data` is a boolean value, false otherwise.\n   */\n  function boolean (data) {\n    return data === false || data === true;\n  }\n\n  /**\n   * Public function `object`.\n   *\n   * Returns true if `data` is a plain-old JS object, false otherwise.\n   */\n  function object (data) {\n    return Object.prototype.toString.call(data) === '[object Object]';\n  }\n\n  /**\n   * Public function `emptyObject`.\n   *\n   * Returns true if `data` is an empty object, false otherwise.\n   */\n  function emptyObject (data) {\n    return object(data) && Object.keys(data).length === 0;\n  }\n\n  /**\n   * Public function `nonEmptyObject`.\n   *\n   * Returns true if `data` is a non-empty object, false otherwise.\n   */\n  function nonEmptyObject (data) {\n    return object(data) && Object.keys(data).length > 0;\n  }\n\n  /**\n   * Public function `instanceStrict`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   */\n  function instanceStrict (data, prototype) {\n    try {\n      return data instanceof prototype;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `instance`.\n   *\n   * Returns true if `data` is an instance of `prototype`, false otherwise.\n   * Falls back to testing constructor.name and Object.prototype.toString\n   * if the initial instanceof test fails.\n   */\n  function instance (data, prototype) {\n    try {\n      return instanceStrict(data, prototype) ||\n        data.constructor.name === prototype.name ||\n        Object.prototype.toString.call(data) === '[object ' + prototype.name + ']';\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Public function `like`.\n   *\n   * Tests whether `data` 'quacks like a duck'. Returns true if `data` has all\n   * of the properties of `archetype` (the 'duck'), false otherwise.\n   */\n  function like (data, archetype) {\n    var name;\n\n    for (name in archetype) {\n      if (archetype.hasOwnProperty(name)) {\n        if (data.hasOwnProperty(name) === false || typeof data[name] !== typeof archetype[name]) {\n          return false;\n        }\n\n        if (object(data[name]) && like(data[name], archetype[name]) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Public function `array`.\n   *\n   * Returns true if `data` is an array, false otherwise.\n   */\n  function array (data) {\n    return isArray(data);\n  }\n\n  /**\n   * Public function `emptyArray`.\n   *\n   * Returns true if `data` is an empty array, false otherwise.\n   */\n  function emptyArray (data) {\n    return array(data) && data.length === 0;\n  }\n\n  /**\n   * Public function `nonEmptyArray`.\n   *\n   * Returns true if `data` is a non-empty array, false otherwise.\n   */\n  function nonEmptyArray (data) {\n    return array(data) && greater(data.length, 0);\n  }\n\n  /**\n   * Public function `arrayLike`.\n   *\n   * Returns true if `data` is an array-like object, false otherwise.\n   */\n  function arrayLike (data) {\n    return assigned(data) && greaterOrEqual(data.length, 0);\n  }\n\n  /**\n   * Public function `iterable`.\n   *\n   * Returns true if `data` is an iterable, false otherwise.\n   */\n  function iterable (data) {\n    if (! haveSymbols) {\n      // Fall back to `arrayLike` predicate in pre-ES6 environments.\n      return arrayLike(data);\n    }\n\n    return assigned(data) && isFunction(data[Symbol.iterator]);\n  }\n\n  /**\n   * Public function `includes`.\n   *\n   * Returns true if `data` contains `value`, false otherwise.\n   */\n  function includes (data, value) {\n    var iterator, iteration, keys, length, i;\n\n    if (! assigned(data)) {\n      return false;\n    }\n\n    if (haveSymbols && data[Symbol.iterator] && isFunction(data.values)) {\n      iterator = data.values();\n\n      do {\n        iteration = iterator.next();\n\n        if (iteration.value === value) {\n          return true;\n        }\n      } while (! iteration.done);\n\n      return false;\n    }\n\n    keys = Object.keys(data);\n    length = keys.length;\n    for (i = 0; i < length; ++i) {\n      if (data[keys[i]] === value) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Public function `hasLength`.\n   *\n   * Returns true if `data` has a length property that equals `length`, false\n   * otherwise.\n   */\n  function hasLength (data, length) {\n    return assigned(data) && data.length === length;\n  }\n\n  /**\n   * Public function `date`.\n   *\n   * Returns true if `data` is a valid date, false otherwise.\n   */\n  function date (data) {\n    return instanceStrict(data, Date) && integer(data.getTime());\n  }\n\n  /**\n   * Public function `function`.\n   *\n   * Returns true if `data` is a function, false otherwise.\n   */\n  function isFunction (data) {\n    return typeof data === 'function';\n  }\n\n  /**\n   * Public function `apply`.\n   *\n   * Maps each value from the `data` to the corresponding predicate and returns\n   * the result array. If the same function is to be applied across all of the\n   * data, a single predicate function may be passed in.\n   *\n   */\n  function apply (data, predicates) {\n    assert.array(data);\n\n    if (isFunction(predicates)) {\n      return data.map(function (value) {\n        return predicates(value);\n      });\n    }\n\n    assert.array(predicates);\n    assert.hasLength(data, predicates.length);\n\n    return data.map(function (value, index) {\n      return predicates[index](value);\n    });\n  }\n\n  /**\n   * Public function `map`.\n   *\n   * Maps each value from the `data` to the corresponding predicate and returns\n   * the result object. Supports nested objects. If the `data` is not nested and\n   * the same function is to be applied across all of it, a single predicate\n   * function may be passed in.\n   *\n   */\n  function map (data, predicates) {\n    assert.object(data);\n\n    if (isFunction(predicates)) {\n      return mapSimple(data, predicates);\n    }\n\n    assert.object(predicates);\n\n    return mapComplex(data, predicates);\n  }\n\n  function mapSimple (data, predicate) {\n    var result = {};\n\n    Object.keys(data).forEach(function (key) {\n      result[key] = predicate(data[key]);\n    });\n\n    return result;\n  }\n\n  function mapComplex (data, predicates) {\n    var result = {};\n\n    Object.keys(predicates).forEach(function (key) {\n      var predicate = predicates[key];\n\n      if (isFunction(predicate)) {\n        if (not.assigned(data)) {\n          result[key] = !!predicate.m;\n        } else {\n          result[key] = predicate(data[key]);\n        }\n      } else if (object(predicate)) {\n        result[key] = mapComplex(data[key], predicate);\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Public function `all`\n   *\n   * Check that all boolean values are true\n   * in an array (returned from `apply`)\n   * or object (returned from `map`).\n   *\n   */\n  function all (data) {\n    if (array(data)) {\n      return testArray(data, false);\n    }\n\n    assert.object(data);\n\n    return testObject(data, false);\n  }\n\n  function testArray (data, result) {\n    var i;\n\n    for (i = 0; i < data.length; i += 1) {\n      if (data[i] === result) {\n        return result;\n      }\n    }\n\n    return !result;\n  }\n\n  function testObject (data, result) {\n    var key, value;\n\n    for (key in data) {\n      if (data.hasOwnProperty(key)) {\n        value = data[key];\n\n        if (object(value) && testObject(value, result) === result) {\n          return result;\n        }\n\n        if (value === result) {\n          return result;\n        }\n      }\n    }\n\n    return !result;\n  }\n\n  /**\n   * Public function `any`\n   *\n   * Check that at least one boolean value is true\n   * in an array (returned from `apply`)\n   * or object (returned from `map`).\n   *\n   */\n  function any (data) {\n    if (array(data)) {\n      return testArray(data, true);\n    }\n\n    assert.object(data);\n\n    return testObject(data, true);\n  }\n\n  function mixin (target, source) {\n    Object.keys(source).forEach(function (key) {\n      target[key] = source[key];\n    });\n\n    return target;\n  }\n\n  /**\n   * Public modifier `assert`.\n   *\n   * Throws if `predicate` returns false.\n   */\n  function assertModifier (predicate, defaultMessage) {\n    return function () {\n      return assertPredicate(predicate, arguments, defaultMessage);\n    };\n  }\n\n  function assertPredicate (predicate, args, defaultMessage) {\n    var argCount = predicate.l || predicate.length;\n    var message = args[argCount];\n    var ErrorType = args[argCount + 1];\n    assertImpl(\n      predicate.apply(null, args),\n      nonEmptyString(message) ? message : defaultMessage,\n      isFunction(ErrorType) ? ErrorType : TypeError\n    );\n    return args[0];\n  }\n\n  function assertImpl (value, message, ErrorType) {\n    if (value) {\n      return value;\n    }\n    throw new (ErrorType || Error)(message || 'Assertion failed');\n  }\n\n  /**\n   * Public modifier `not`.\n   *\n   * Negates `predicate`.\n   */\n  function notModifier (predicate) {\n    var modifiedPredicate = function () {\n      return notImpl(predicate.apply(null, arguments));\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function notImpl (value) {\n    return !value;\n  }\n\n  /**\n   * Public modifier `maybe`.\n   *\n   * Returns true if predicate argument is  null or undefined,\n   * otherwise propagates the return value from `predicate`.\n   */\n  function maybeModifier (predicate) {\n    var modifiedPredicate = function () {\n      if (not.assigned(arguments[0])) {\n        return true;\n      }\n\n      return predicate.apply(null, arguments);\n    };\n    modifiedPredicate.l = predicate.length;\n\n    // Hackishly indicate that this is a maybe.xxx predicate.\n    // Without this flag, the alternative would be to iterate\n    // through the maybe predicates or use indexOf to check,\n    // which would be time-consuming.\n    modifiedPredicate.m = true;\n\n    return modifiedPredicate;\n  }\n\n  function maybeImpl (value) {\n    if (assigned(value) === false) {\n      return true;\n    }\n\n    return value;\n  }\n\n  /**\n   * Public modifier `of`.\n   *\n   * Applies the chained predicate to members of the collection.\n   */\n  function ofModifier (target, type, predicate) {\n    var modifiedPredicate = function () {\n      var collection, args;\n\n      collection = arguments[0];\n\n      if (target === 'maybe' && not.assigned(collection)) {\n        return true;\n      }\n\n      if (!type(collection)) {\n        return false;\n      }\n\n      collection = coerceCollection(type, collection);\n      args = slice.call(arguments, 1);\n\n      try {\n        collection.forEach(function (item) {\n          if (\n            (target !== 'maybe' || assigned(item)) &&\n            !predicate.apply(null, [ item ].concat(args))\n          ) {\n            // TODO: Replace with for...of when ES6 is required.\n            throw 0;\n          }\n        });\n      } catch (ignore) {\n        return false;\n      }\n\n      return true;\n    };\n    modifiedPredicate.l = predicate.length;\n    return modifiedPredicate;\n  }\n\n  function coerceCollection (type, collection) {\n    switch (type) {\n      case arrayLike:\n        return slice.call(collection);\n      case object:\n        return Object.keys(collection).map(function (key) {\n          return collection[key];\n        });\n      default:\n        return collection;\n    }\n  }\n\n  function createModifiedPredicates (modifier, object) {\n    return createModifiedFunctions([ modifier, predicates, object ]);\n  }\n\n  function createModifiedFunctions (args) {\n    var modifier, object, functions, result;\n\n    modifier = args.shift();\n    object = args.pop();\n    functions = args.pop();\n\n    result = object || {};\n\n    Object.keys(functions).forEach(function (key) {\n      Object.defineProperty(result, key, {\n        configurable: false,\n        enumerable: true,\n        writable: false,\n        value: modifier.apply(null, args.concat(functions[key], messages[key]))\n      });\n    });\n\n    return result;\n  }\n\n  function createModifiedModifier (modifier, modified) {\n    return createModifiedFunctions([ modifier, modified, null ]);\n  }\n\n  function createOfPredicates (key) {\n    predicates[key].of = createModifiedFunctions(\n      [ ofModifier.bind(null, null), predicates[key], predicates, null ]\n    );\n  }\n\n  function createOfModifiers (base, modifier) {\n    collections.forEach(function (key) {\n      base[key].of = createModifiedModifier(modifier, predicates[key].of);\n    });\n  }\n\n  function createMaybeOfModifiers (key) {\n    maybe[key].of = createModifiedFunctions(\n      [ ofModifier.bind(null, 'maybe'), predicates[key], predicates, null ]\n    );\n    assert.maybe[key].of = createModifiedModifier(assertModifier, maybe[key].of);\n    assert.not[key].of = createModifiedModifier(assertModifier, not[key].of);\n  }\n\n  function exportFunctions (functions) {\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return functions;\n      });\n    } else if (typeof module !== 'undefined' && module !== null && module.exports) {\n      module.exports = functions;\n    } else {\n      globals.check = functions;\n    }\n  }\n}(this));\n","/**\n *\n * Tesseract Worker adapter for browser\n *\n * @fileoverview Tesseract Worker adapter for browser\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst check = require('check-types');\nconst resolveURL = require('resolve-url');\nconst { defaultOptions } = require('../common/options');\nconst { version } = require('../../package.json');\n\n/**\n * readFromBlobOrFile\n *\n * @name readFromBlobOrFile\n * @function\n * @access private\n * @param {object} blob A blob or file objec to read\n * @param {function} res callback function after reading completes\n */\nconst readFromBlobOrFile = (blob, res) => {\n  const fileReader = new FileReader();\n  fileReader.onload = () => {\n    res(fileReader.result);\n  };\n  fileReader.readAsArrayBuffer(blob);\n};\n\n/**\n * loadImage\n *\n * @name loadImage\n * @function load image from different source\n * @access private\n * @param {string, object} image - image source, supported formats:\n *   string: URL string, can be relative path\n *   img HTMLElement: extract image source from src attribute\n *   video HTMLElement: extract image source from poster attribute\n *   canvas HTMLElement: extract image data by converting to Blob \n *   File instance: data from <input type=\"file\" />\n * @returns {array} binary image in array format\n */\nconst loadImage = (image) => {\n  if (check.string(image)) {\n    return fetch(resolveURL(image))\n      .then(resp => resp.arrayBuffer());\n  }\n  if (check.instance(image, HTMLElement)) {\n    if (image.tagName === 'IMG') {\n      return loadImage(image.src);\n    }\n    if (image.tagName === 'VIDEO') {\n      return loadImage(image.poster);\n    }\n    if (image.tagName === 'CANVAS') {\n      return new Promise((res) => {\n        image.toBlob((blob) => {\n          readFromBlobOrFile(blob, res);\n        });\n      });\n    }\n  }\n  if (check.instance(image, File)) {\n    return new Promise((res) => {\n      readFromBlobOrFile(image, res);\n    });\n  }\n  return Promise.reject();\n};\n\n/*\n * Default options for browser worker\n */\nexports.defaultOptions = {\n  ...defaultOptions,\n  workerPath: process.env.TESS_ENV === 'development'\n    ? resolveURL(`/dist/worker.dev.js?nocache=${Math.random().toString(36).slice(3)}`)\n    : `https://unpkg.com/tesseract.js@v${version}/dist/worker.min.js`,\n  /*\n   * If browser doesn't support WebAssembly,\n   * load ASM version instead\n   */\n  corePath: `https://unpkg.com/tesseract.js-core@v2.0.0-beta.5/tesseract-core${typeof WebAssembly === 'object' ? '' : '.asm'}.js`,\n};\n\n/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n * @param {object} instance - TesseractWorker instance\n * @param {object} options\n * @param {string} options.workerPath - worker script path\n */\nexports.spawnWorker = (instance, { workerPath }) => {\n  let worker;\n  if (window.Blob && window.URL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`]);\n    worker = new Worker(window.URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  worker.onmessage = ({ data }) => {\n    instance.recv(data);\n  };\n\n  return worker;\n};\n\n/**\n * terminateWorker\n *\n * @name terminateWorker\n * @function terminate worker\n * @access public\n * @param {object} instance TesseractWorker instance\n */\nexports.terminateWorker = (instance) => {\n  instance.worker.terminate();\n};\n\n/**\n * sendPacket\n *\n * @name sendPacket\n * @function send packet to worker and create a job\n * @access public\n * @param {object} instance TesseractWorker instance\n * @param {object} iPacket data for worker\n */\nexports.sendPacket = (instance, iPacket) => {\n  const packet = { ...iPacket };\n  loadImage(packet.payload.image)\n    .then(buf => new Uint8Array(buf))\n    .then((img) => {\n      packet.payload.image = Array.from(img);\n      instance.worker.postMessage(packet);\n    });\n};\n","/**\n *\n * Entry point for tesseract.js, should be the entry when bundling.\n *\n * @fileoverview entry point for tesseract.js\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst utils = require('tesseract.js-utils');\nconst TesseractWorker = require('./common/TesseractWorker');\n\nmodule.exports = {\n  /** Worker for OCR, @see common/TesseractWorker.js */\n  TesseractWorker,\n  /** Utilities for tesseract.js, @see {@link https://www.npmjs.com/package/tesseract.js-utils} */\n  utils,\n};\n","const cache = require('./common/browser/cache');\n\nmodule.exports = {\n  loadLang: require('./loadLang')({\n    fetch: require('./common/browser/fetch'),\n    gunzip: require('./common/browser/gunzip'),\n    resolveURL: require('resolve-url'),\n    ...cache,\n  }),\n  readImage: require('./readImage'),\n  cache,\n};\n","const { set, get, del } = require('idb-keyval');\n\nmodule.exports = {\n  readCache: get,\n  writeCache: set,\n  deleteCache: del,\n  checkCache: path => (\n    get(path)\n      .then(v => typeof v !== 'undefined')\n  ),\n};\n","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(dbName, 1);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readonly', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readonly', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\n\nexport { Store, get, set, del, clear, keys };\n","const isURL = require('is-url');\n\nconst handleLang = modules => ({\n  TessModule,\n  dataPath,\n  cachePath,\n  cacheMethod,\n  lang,\n}) => (data) => {\n  if (TessModule) {\n    if (dataPath) {\n      try {\n        TessModule.FS.mkdir(dataPath);\n      } catch (err) {\n        // TODO: Do some error handling here.\n      }\n    }\n    TessModule.FS.writeFile(`${dataPath || '.'}/${lang}.traineddata`, data);\n  }\n  if (['write', 'refresh', undefined].includes(cacheMethod)) {\n    return modules.writeCache(`${cachePath || '.'}/${lang}.traineddata`, data)\n      .then(() => data);\n  }\n\n  return data;\n};\n\nconst loadAndGunzipFile = modules => ({\n  langPath,\n  cachePath,\n  cacheMethod,\n  ...options\n}) => (lang) => {\n  let { readCache } = modules;\n  if (['refresh', 'none'].includes(cacheMethod)) {\n    readCache = () => Promise.resolve();\n  }\n\n  return readCache(`${cachePath || '.'}/${lang}.traineddata`)\n    .then((data) => {\n      if (typeof data === 'undefined') {\n        return Promise.reject();\n      }\n      return handleLang(modules)({\n        cachePath, cacheMethod, lang, ...options,\n      })(data);\n    })\n    .catch(() => {\n      const fetchTrainedData = iLangPath => (\n        modules.fetch(`${iLangPath}/${lang}.traineddata.gz`)\n          .then(resp => resp.arrayBuffer())\n          .then(buf => modules.gunzip(new Uint8Array(buf)))\n          .then(handleLang(modules)({\n            cachePath, cacheMethod, lang, ...options,\n          }))\n      );\n\n      /** When langPath is an URL, just do the fetch */\n      if (isURL(langPath)) {\n        return fetchTrainedData(langPath);\n      }\n\n      /** When langPath is not an URL in browser environment */\n      if (process.browser) {\n        return fetchTrainedData(modules.resolveURL(langPath));\n      }\n\n      /** When langPath is not an URL in Node.js environment */\n      return modules.readCache(`${langPath}/${lang}.traineddata.gz`)\n        .then(buf => modules.gunzip(new Uint8Array(buf)))\n        .then(handleLang(modules)({\n          cachePath, cacheMethod, lang, ...options,\n        }));\n    });\n};\n\n/**\n *\n * @name loadLang\n * @function load language(s) from local cache, download from remote if not in cache.\n * @param {object} options\n * @param {string} options.lang - langs to load, use '+' for multiple languages, ex: eng+chi_tra\n * @param {object} options.TessModule - TesseractModule\n * @param {string} options.langPath - prefix path for downloading lang file\n * @param {string} options.cachePath - path to find cache\n * @param {string} options.dataPath - path to store data in mem\n * @param {string} options.cacheMethod -\n *     method of cache invaliation, should one of following options:\n *       write: read cache and write back (default method)\n *       readOnly: read cache and not to write back\n *       refresh: not to read cache and write back\n *       none: not to read cache and not to write back\n *\n */\nmodule.exports = modules => ({\n  lang: langs,\n  ...options\n}) => (\n  Promise\n    .all(langs.split('+').map(loadAndGunzipFile(modules)(options)))\n);\n","\n/**\n * Expose `isUrl`.\n */\n\nmodule.exports = isUrl;\n\n/**\n * RegExps.\n * A URL must match #1 and then at least one of #2/#3.\n * Use two levels of REs to avoid REDOS.\n */\n\nvar protocolAndDomainRE = /^(?:\\w+:)?\\/\\/(\\S+)$/;\n\nvar localhostDomainRE = /^localhost[\\:?\\d]*(?:[^\\:?\\d]\\S*)?$/\nvar nonLocalhostDomainRE = /^[^\\s\\.]+\\.\\S{2,}$/;\n\n/**\n * Loosely validate a URL `string`.\n *\n * @param {String} string\n * @return {Boolean}\n */\n\nfunction isUrl(string){\n  if (typeof string !== 'string') {\n    return false;\n  }\n\n  var match = string.match(protocolAndDomainRE);\n  if (!match) {\n    return false;\n  }\n\n  var everythingAfterProtocol = match[1];\n  if (!everythingAfterProtocol) {\n    return false;\n  }\n\n  if (localhostDomainRE.test(everythingAfterProtocol) ||\n      nonLocalhostDomainRE.test(everythingAfterProtocol)) {\n    return true;\n  }\n\n  return false;\n}\n","module.exports = fetch.bind();\n","module.exports = require('zlibjs').gunzipSync;\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';function q(b){throw b;}var t=void 0,v=!0;var B=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function G(b,a){this.index=\"number\"===typeof a?a:0;this.m=0;this.buffer=b instanceof(B?Uint8Array:Array)?b:new (B?Uint8Array:Array)(32768);2*this.buffer.length<=this.index&&q(Error(\"invalid index\"));this.buffer.length<=this.index&&this.f()}G.prototype.f=function(){var b=this.buffer,a,c=b.length,d=new (B?Uint8Array:Array)(c<<1);if(B)d.set(b);else for(a=0;a<c;++a)d[a]=b[a];return this.buffer=d};\nG.prototype.d=function(b,a,c){var d=this.buffer,e=this.index,f=this.m,g=d[e],k;c&&1<a&&(b=8<a?(I[b&255]<<24|I[b>>>8&255]<<16|I[b>>>16&255]<<8|I[b>>>24&255])>>32-a:I[b]>>8-a);if(8>a+f)g=g<<a|b,f+=a;else for(k=0;k<a;++k)g=g<<1|b>>a-k-1&1,8===++f&&(f=0,d[e++]=I[g],g=0,e===d.length&&(d=this.f()));d[e]=g;this.buffer=d;this.m=f;this.index=e};G.prototype.finish=function(){var b=this.buffer,a=this.index,c;0<this.m&&(b[a]<<=8-this.m,b[a]=I[b[a]],a++);B?c=b.subarray(0,a):(b.length=a,c=b);return c};\nvar aa=new (B?Uint8Array:Array)(256),L;for(L=0;256>L;++L){for(var R=L,ba=R,ca=7,R=R>>>1;R;R>>>=1)ba<<=1,ba|=R&1,--ca;aa[L]=(ba<<ca&255)>>>0}var I=aa;function ha(b,a,c){var d,e=\"number\"===typeof a?a:a=0,f=\"number\"===typeof c?c:b.length;d=-1;for(e=f&7;e--;++a)d=d>>>8^S[(d^b[a])&255];for(e=f>>3;e--;a+=8)d=d>>>8^S[(d^b[a])&255],d=d>>>8^S[(d^b[a+1])&255],d=d>>>8^S[(d^b[a+2])&255],d=d>>>8^S[(d^b[a+3])&255],d=d>>>8^S[(d^b[a+4])&255],d=d>>>8^S[(d^b[a+5])&255],d=d>>>8^S[(d^b[a+6])&255],d=d>>>8^S[(d^b[a+7])&255];return(d^4294967295)>>>0}\nvar ia=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],S=B?new Uint32Array(ia):ia;function ja(){};function ka(b){this.buffer=new (B?Uint16Array:Array)(2*b);this.length=0}ka.prototype.getParent=function(b){return 2*((b-2)/4|0)};ka.prototype.push=function(b,a){var c,d,e=this.buffer,f;c=this.length;e[this.length++]=a;for(e[this.length++]=b;0<c;)if(d=this.getParent(c),e[c]>e[d])f=e[c],e[c]=e[d],e[d]=f,f=e[c+1],e[c+1]=e[d+1],e[d+1]=f,c=d;else break;return this.length};\nka.prototype.pop=function(){var b,a,c=this.buffer,d,e,f;a=c[0];b=c[1];this.length-=2;c[0]=c[this.length];c[1]=c[this.length+1];for(f=0;;){e=2*f+2;if(e>=this.length)break;e+2<this.length&&c[e+2]>c[e]&&(e+=2);if(c[e]>c[f])d=c[f],c[f]=c[e],c[e]=d,d=c[f+1],c[f+1]=c[e+1],c[e+1]=d;else break;f=e}return{index:b,value:a,length:this.length}};function T(b){var a=b.length,c=0,d=Number.POSITIVE_INFINITY,e,f,g,k,h,m,r,p,l,n;for(p=0;p<a;++p)b[p]>c&&(c=b[p]),b[p]<d&&(d=b[p]);e=1<<c;f=new (B?Uint32Array:Array)(e);g=1;k=0;for(h=2;g<=c;){for(p=0;p<a;++p)if(b[p]===g){m=0;r=k;for(l=0;l<g;++l)m=m<<1|r&1,r>>=1;n=g<<16|p;for(l=m;l<e;l+=h)f[l]=n;++k}++g;k<<=1;h<<=1}return[f,c,d]};function na(b,a){this.k=oa;this.F=0;this.input=B&&b instanceof Array?new Uint8Array(b):b;this.b=0;a&&(a.lazy&&(this.F=a.lazy),\"number\"===typeof a.compressionType&&(this.k=a.compressionType),a.outputBuffer&&(this.a=B&&a.outputBuffer instanceof Array?new Uint8Array(a.outputBuffer):a.outputBuffer),\"number\"===typeof a.outputIndex&&(this.b=a.outputIndex));this.a||(this.a=new (B?Uint8Array:Array)(32768))}var oa=2,pa={NONE:0,L:1,t:oa,X:3},qa=[],U;\nfor(U=0;288>U;U++)switch(v){case 143>=U:qa.push([U+48,8]);break;case 255>=U:qa.push([U-144+400,9]);break;case 279>=U:qa.push([U-256+0,7]);break;case 287>=U:qa.push([U-280+192,8]);break;default:q(\"invalid literal: \"+U)}\nna.prototype.h=function(){var b,a,c,d,e=this.input;switch(this.k){case 0:c=0;for(d=e.length;c<d;){a=B?e.subarray(c,c+65535):e.slice(c,c+65535);c+=a.length;var f=a,g=c===d,k=t,h=t,m=t,r=t,p=t,l=this.a,n=this.b;if(B){for(l=new Uint8Array(this.a.buffer);l.length<=n+f.length+5;)l=new Uint8Array(l.length<<1);l.set(this.a)}k=g?1:0;l[n++]=k|0;h=f.length;m=~h+65536&65535;l[n++]=h&255;l[n++]=h>>>8&255;l[n++]=m&255;l[n++]=m>>>8&255;if(B)l.set(f,n),n+=f.length,l=l.subarray(0,n);else{r=0;for(p=f.length;r<p;++r)l[n++]=\nf[r];l.length=n}this.b=n;this.a=l}break;case 1:var s=new G(B?new Uint8Array(this.a.buffer):this.a,this.b);s.d(1,1,v);s.d(1,2,v);var u=ra(this,e),w,C,x;w=0;for(C=u.length;w<C;w++)if(x=u[w],G.prototype.d.apply(s,qa[x]),256<x)s.d(u[++w],u[++w],v),s.d(u[++w],5),s.d(u[++w],u[++w],v);else if(256===x)break;this.a=s.finish();this.b=this.a.length;break;case oa:var D=new G(B?new Uint8Array(this.a.buffer):this.a,this.b),M,z,N,X,Y,qb=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],da,Fa,ea,Ga,la,ta=Array(19),\nHa,Z,ma,E,Ia;M=oa;D.d(1,1,v);D.d(M,2,v);z=ra(this,e);da=sa(this.U,15);Fa=ua(da);ea=sa(this.T,7);Ga=ua(ea);for(N=286;257<N&&0===da[N-1];N--);for(X=30;1<X&&0===ea[X-1];X--);var Ja=N,Ka=X,K=new (B?Uint32Array:Array)(Ja+Ka),y,O,A,fa,J=new (B?Uint32Array:Array)(316),H,F,P=new (B?Uint8Array:Array)(19);for(y=O=0;y<Ja;y++)K[O++]=da[y];for(y=0;y<Ka;y++)K[O++]=ea[y];if(!B){y=0;for(fa=P.length;y<fa;++y)P[y]=0}y=H=0;for(fa=K.length;y<fa;y+=O){for(O=1;y+O<fa&&K[y+O]===K[y];++O);A=O;if(0===K[y])if(3>A)for(;0<A--;)J[H++]=\n0,P[0]++;else for(;0<A;)F=138>A?A:138,F>A-3&&F<A&&(F=A-3),10>=F?(J[H++]=17,J[H++]=F-3,P[17]++):(J[H++]=18,J[H++]=F-11,P[18]++),A-=F;else if(J[H++]=K[y],P[K[y]]++,A--,3>A)for(;0<A--;)J[H++]=K[y],P[K[y]]++;else for(;0<A;)F=6>A?A:6,F>A-3&&F<A&&(F=A-3),J[H++]=16,J[H++]=F-3,P[16]++,A-=F}b=B?J.subarray(0,H):J.slice(0,H);la=sa(P,7);for(E=0;19>E;E++)ta[E]=la[qb[E]];for(Y=19;4<Y&&0===ta[Y-1];Y--);Ha=ua(la);D.d(N-257,5,v);D.d(X-1,5,v);D.d(Y-4,4,v);for(E=0;E<Y;E++)D.d(ta[E],3,v);E=0;for(Ia=b.length;E<Ia;E++)if(Z=\nb[E],D.d(Ha[Z],la[Z],v),16<=Z){E++;switch(Z){case 16:ma=2;break;case 17:ma=3;break;case 18:ma=7;break;default:q(\"invalid code: \"+Z)}D.d(b[E],ma,v)}var La=[Fa,da],Ma=[Ga,ea],Q,Na,ga,wa,Oa,Pa,Qa,Ra;Oa=La[0];Pa=La[1];Qa=Ma[0];Ra=Ma[1];Q=0;for(Na=z.length;Q<Na;++Q)if(ga=z[Q],D.d(Oa[ga],Pa[ga],v),256<ga)D.d(z[++Q],z[++Q],v),wa=z[++Q],D.d(Qa[wa],Ra[wa],v),D.d(z[++Q],z[++Q],v);else if(256===ga)break;this.a=D.finish();this.b=this.a.length;break;default:q(\"invalid compression type\")}return this.a};\nfunction va(b,a){this.length=b;this.N=a}\nvar xa=function(){function b(a){switch(v){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:q(\"invalid length: \"+a)}}var a=[],c,d;for(c=3;258>=c;c++)d=b(c),a[c]=d[2]<<24|d[1]<<\n16|d[0];return a}(),ya=B?new Uint32Array(xa):xa;\nfunction ra(b,a){function c(a,c){var b=a.N,d=[],f=0,e;e=ya[a.length];d[f++]=e&65535;d[f++]=e>>16&255;d[f++]=e>>24;var g;switch(v){case 1===b:g=[0,b-1,0];break;case 2===b:g=[1,b-2,0];break;case 3===b:g=[2,b-3,0];break;case 4===b:g=[3,b-4,0];break;case 6>=b:g=[4,b-5,1];break;case 8>=b:g=[5,b-7,1];break;case 12>=b:g=[6,b-9,2];break;case 16>=b:g=[7,b-13,2];break;case 24>=b:g=[8,b-17,3];break;case 32>=b:g=[9,b-25,3];break;case 48>=b:g=[10,b-33,4];break;case 64>=b:g=[11,b-49,4];break;case 96>=b:g=[12,b-\n65,5];break;case 128>=b:g=[13,b-97,5];break;case 192>=b:g=[14,b-129,6];break;case 256>=b:g=[15,b-193,6];break;case 384>=b:g=[16,b-257,7];break;case 512>=b:g=[17,b-385,7];break;case 768>=b:g=[18,b-513,8];break;case 1024>=b:g=[19,b-769,8];break;case 1536>=b:g=[20,b-1025,9];break;case 2048>=b:g=[21,b-1537,9];break;case 3072>=b:g=[22,b-2049,10];break;case 4096>=b:g=[23,b-3073,10];break;case 6144>=b:g=[24,b-4097,11];break;case 8192>=b:g=[25,b-6145,11];break;case 12288>=b:g=[26,b-8193,12];break;case 16384>=\nb:g=[27,b-12289,12];break;case 24576>=b:g=[28,b-16385,13];break;case 32768>=b:g=[29,b-24577,13];break;default:q(\"invalid distance\")}e=g;d[f++]=e[0];d[f++]=e[1];d[f++]=e[2];var h,k;h=0;for(k=d.length;h<k;++h)l[n++]=d[h];u[d[0]]++;w[d[3]]++;s=a.length+c-1;p=null}var d,e,f,g,k,h={},m,r,p,l=B?new Uint16Array(2*a.length):[],n=0,s=0,u=new (B?Uint32Array:Array)(286),w=new (B?Uint32Array:Array)(30),C=b.F,x;if(!B){for(f=0;285>=f;)u[f++]=0;for(f=0;29>=f;)w[f++]=0}u[256]=1;d=0;for(e=a.length;d<e;++d){f=k=0;\nfor(g=3;f<g&&d+f!==e;++f)k=k<<8|a[d+f];h[k]===t&&(h[k]=[]);m=h[k];if(!(0<s--)){for(;0<m.length&&32768<d-m[0];)m.shift();if(d+3>=e){p&&c(p,-1);f=0;for(g=e-d;f<g;++f)x=a[d+f],l[n++]=x,++u[x];break}0<m.length?(r=za(a,d,m),p?p.length<r.length?(x=a[d-1],l[n++]=x,++u[x],c(r,0)):c(p,-1):r.length<C?p=r:c(r,0)):p?c(p,-1):(x=a[d],l[n++]=x,++u[x])}m.push(d)}l[n++]=256;u[256]++;b.U=u;b.T=w;return B?l.subarray(0,n):l}\nfunction za(b,a,c){var d,e,f=0,g,k,h,m,r=b.length;k=0;m=c.length;a:for(;k<m;k++){d=c[m-k-1];g=3;if(3<f){for(h=f;3<h;h--)if(b[d+h-1]!==b[a+h-1])continue a;g=f}for(;258>g&&a+g<r&&b[d+g]===b[a+g];)++g;g>f&&(e=d,f=g);if(258===g)break}return new va(f,a-e)}\nfunction sa(b,a){var c=b.length,d=new ka(572),e=new (B?Uint8Array:Array)(c),f,g,k,h,m;if(!B)for(h=0;h<c;h++)e[h]=0;for(h=0;h<c;++h)0<b[h]&&d.push(h,b[h]);f=Array(d.length/2);g=new (B?Uint32Array:Array)(d.length/2);if(1===f.length)return e[d.pop().index]=1,e;h=0;for(m=d.length/2;h<m;++h)f[h]=d.pop(),g[h]=f[h].value;k=Aa(g,g.length,a);h=0;for(m=f.length;h<m;++h)e[f[h].index]=k[h];return e}\nfunction Aa(b,a,c){function d(b){var c=h[b][m[b]];c===a?(d(b+1),d(b+1)):--g[c];++m[b]}var e=new (B?Uint16Array:Array)(c),f=new (B?Uint8Array:Array)(c),g=new (B?Uint8Array:Array)(a),k=Array(c),h=Array(c),m=Array(c),r=(1<<c)-a,p=1<<c-1,l,n,s,u,w;e[c-1]=a;for(n=0;n<c;++n)r<p?f[n]=0:(f[n]=1,r-=p),r<<=1,e[c-2-n]=(e[c-1-n]/2|0)+a;e[0]=f[0];k[0]=Array(e[0]);h[0]=Array(e[0]);for(n=1;n<c;++n)e[n]>2*e[n-1]+f[n]&&(e[n]=2*e[n-1]+f[n]),k[n]=Array(e[n]),h[n]=Array(e[n]);for(l=0;l<a;++l)g[l]=c;for(s=0;s<e[c-1];++s)k[c-\n1][s]=b[s],h[c-1][s]=s;for(l=0;l<c;++l)m[l]=0;1===f[c-1]&&(--g[0],++m[c-1]);for(n=c-2;0<=n;--n){u=l=0;w=m[n+1];for(s=0;s<e[n];s++)u=k[n+1][w]+k[n+1][w+1],u>b[l]?(k[n][s]=u,h[n][s]=a,w+=2):(k[n][s]=b[l],h[n][s]=l,++l);m[n]=0;1===f[n]&&d(n)}return g}\nfunction ua(b){var a=new (B?Uint16Array:Array)(b.length),c=[],d=[],e=0,f,g,k,h;f=0;for(g=b.length;f<g;f++)c[b[f]]=(c[b[f]]|0)+1;f=1;for(g=16;f<=g;f++)d[f]=e,e+=c[f]|0,e<<=1;f=0;for(g=b.length;f<g;f++){e=d[b[f]];d[b[f]]+=1;k=a[f]=0;for(h=b[f];k<h;k++)a[f]=a[f]<<1|e&1,e>>>=1}return a};function Ba(b,a){this.input=b;this.b=this.c=0;this.g={};a&&(a.flags&&(this.g=a.flags),\"string\"===typeof a.filename&&(this.filename=a.filename),\"string\"===typeof a.comment&&(this.w=a.comment),a.deflateOptions&&(this.l=a.deflateOptions));this.l||(this.l={})}\nBa.prototype.h=function(){var b,a,c,d,e,f,g,k,h=new (B?Uint8Array:Array)(32768),m=0,r=this.input,p=this.c,l=this.filename,n=this.w;h[m++]=31;h[m++]=139;h[m++]=8;b=0;this.g.fname&&(b|=Ca);this.g.fcomment&&(b|=Da);this.g.fhcrc&&(b|=Ea);h[m++]=b;a=(Date.now?Date.now():+new Date)/1E3|0;h[m++]=a&255;h[m++]=a>>>8&255;h[m++]=a>>>16&255;h[m++]=a>>>24&255;h[m++]=0;h[m++]=Sa;if(this.g.fname!==t){g=0;for(k=l.length;g<k;++g)f=l.charCodeAt(g),255<f&&(h[m++]=f>>>8&255),h[m++]=f&255;h[m++]=0}if(this.g.comment){g=\n0;for(k=n.length;g<k;++g)f=n.charCodeAt(g),255<f&&(h[m++]=f>>>8&255),h[m++]=f&255;h[m++]=0}this.g.fhcrc&&(c=ha(h,0,m)&65535,h[m++]=c&255,h[m++]=c>>>8&255);this.l.outputBuffer=h;this.l.outputIndex=m;e=new na(r,this.l);h=e.h();m=e.b;B&&(m+8>h.buffer.byteLength?(this.a=new Uint8Array(m+8),this.a.set(new Uint8Array(h.buffer)),h=this.a):h=new Uint8Array(h.buffer));d=ha(r,t,t);h[m++]=d&255;h[m++]=d>>>8&255;h[m++]=d>>>16&255;h[m++]=d>>>24&255;k=r.length;h[m++]=k&255;h[m++]=k>>>8&255;h[m++]=k>>>16&255;h[m++]=\nk>>>24&255;this.c=p;B&&m<h.length&&(this.a=h=h.subarray(0,m));return h};var Sa=255,Ea=2,Ca=8,Da=16;function V(b,a){this.o=[];this.p=32768;this.e=this.j=this.c=this.s=0;this.input=B?new Uint8Array(b):b;this.u=!1;this.q=Ta;this.K=!1;if(a||!(a={}))a.index&&(this.c=a.index),a.bufferSize&&(this.p=a.bufferSize),a.bufferType&&(this.q=a.bufferType),a.resize&&(this.K=a.resize);switch(this.q){case Ua:this.b=32768;this.a=new (B?Uint8Array:Array)(32768+this.p+258);break;case Ta:this.b=0;this.a=new (B?Uint8Array:Array)(this.p);this.f=this.S;this.z=this.O;this.r=this.Q;break;default:q(Error(\"invalid inflate mode\"))}}\nvar Ua=0,Ta=1;\nV.prototype.i=function(){for(;!this.u;){var b=W(this,3);b&1&&(this.u=v);b>>>=1;switch(b){case 0:var a=this.input,c=this.c,d=this.a,e=this.b,f=a.length,g=t,k=t,h=d.length,m=t;this.e=this.j=0;c+1>=f&&q(Error(\"invalid uncompressed block header: LEN\"));g=a[c++]|a[c++]<<8;c+1>=f&&q(Error(\"invalid uncompressed block header: NLEN\"));k=a[c++]|a[c++]<<8;g===~k&&q(Error(\"invalid uncompressed block header: length verify\"));c+g>a.length&&q(Error(\"input buffer is broken\"));switch(this.q){case Ua:for(;e+g>d.length;){m=\nh-e;g-=m;if(B)d.set(a.subarray(c,c+m),e),e+=m,c+=m;else for(;m--;)d[e++]=a[c++];this.b=e;d=this.f();e=this.b}break;case Ta:for(;e+g>d.length;)d=this.f({B:2});break;default:q(Error(\"invalid inflate mode\"))}if(B)d.set(a.subarray(c,c+g),e),e+=g,c+=g;else for(;g--;)d[e++]=a[c++];this.c=c;this.b=e;this.a=d;break;case 1:this.r(Va,Wa);break;case 2:for(var r=W(this,5)+257,p=W(this,5)+1,l=W(this,4)+4,n=new (B?Uint8Array:Array)(Xa.length),s=t,u=t,w=t,C=t,x=t,D=t,M=t,z=t,N=t,z=0;z<l;++z)n[Xa[z]]=W(this,3);if(!B){z=\nl;for(l=n.length;z<l;++z)n[Xa[z]]=0}s=T(n);C=new (B?Uint8Array:Array)(r+p);z=0;for(N=r+p;z<N;)switch(x=Ya(this,s),x){case 16:for(M=3+W(this,2);M--;)C[z++]=D;break;case 17:for(M=3+W(this,3);M--;)C[z++]=0;D=0;break;case 18:for(M=11+W(this,7);M--;)C[z++]=0;D=0;break;default:D=C[z++]=x}u=B?T(C.subarray(0,r)):T(C.slice(0,r));w=B?T(C.subarray(r)):T(C.slice(r));this.r(u,w);break;default:q(Error(\"unknown BTYPE: \"+b))}}return this.z()};\nvar Za=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Xa=B?new Uint16Array(Za):Za,$a=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],ab=B?new Uint16Array($a):$a,bb=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],cb=B?new Uint8Array(bb):bb,db=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],eb=B?new Uint16Array(db):db,fb=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,\n10,11,11,12,12,13,13],gb=B?new Uint8Array(fb):fb,hb=new (B?Uint8Array:Array)(288),$,ib;$=0;for(ib=hb.length;$<ib;++$)hb[$]=143>=$?8:255>=$?9:279>=$?7:8;var Va=T(hb),jb=new (B?Uint8Array:Array)(30),kb,lb;kb=0;for(lb=jb.length;kb<lb;++kb)jb[kb]=5;var Wa=T(jb);function W(b,a){for(var c=b.j,d=b.e,e=b.input,f=b.c,g=e.length,k;d<a;)f>=g&&q(Error(\"input buffer is broken\")),c|=e[f++]<<d,d+=8;k=c&(1<<a)-1;b.j=c>>>a;b.e=d-a;b.c=f;return k}\nfunction Ya(b,a){for(var c=b.j,d=b.e,e=b.input,f=b.c,g=e.length,k=a[0],h=a[1],m,r;d<h&&!(f>=g);)c|=e[f++]<<d,d+=8;m=k[c&(1<<h)-1];r=m>>>16;r>d&&q(Error(\"invalid code length: \"+r));b.j=c>>r;b.e=d-r;b.c=f;return m&65535}\nV.prototype.r=function(b,a){var c=this.a,d=this.b;this.A=b;for(var e=c.length-258,f,g,k,h;256!==(f=Ya(this,b));)if(256>f)d>=e&&(this.b=d,c=this.f(),d=this.b),c[d++]=f;else{g=f-257;h=ab[g];0<cb[g]&&(h+=W(this,cb[g]));f=Ya(this,a);k=eb[f];0<gb[f]&&(k+=W(this,gb[f]));d>=e&&(this.b=d,c=this.f(),d=this.b);for(;h--;)c[d]=c[d++-k]}for(;8<=this.e;)this.e-=8,this.c--;this.b=d};\nV.prototype.Q=function(b,a){var c=this.a,d=this.b;this.A=b;for(var e=c.length,f,g,k,h;256!==(f=Ya(this,b));)if(256>f)d>=e&&(c=this.f(),e=c.length),c[d++]=f;else{g=f-257;h=ab[g];0<cb[g]&&(h+=W(this,cb[g]));f=Ya(this,a);k=eb[f];0<gb[f]&&(k+=W(this,gb[f]));d+h>e&&(c=this.f(),e=c.length);for(;h--;)c[d]=c[d++-k]}for(;8<=this.e;)this.e-=8,this.c--;this.b=d};\nV.prototype.f=function(){var b=new (B?Uint8Array:Array)(this.b-32768),a=this.b-32768,c,d,e=this.a;if(B)b.set(e.subarray(32768,b.length));else{c=0;for(d=b.length;c<d;++c)b[c]=e[c+32768]}this.o.push(b);this.s+=b.length;if(B)e.set(e.subarray(a,a+32768));else for(c=0;32768>c;++c)e[c]=e[a+c];this.b=32768;return e};\nV.prototype.S=function(b){var a,c=this.input.length/this.c+1|0,d,e,f,g=this.input,k=this.a;b&&(\"number\"===typeof b.B&&(c=b.B),\"number\"===typeof b.M&&(c+=b.M));2>c?(d=(g.length-this.c)/this.A[2],f=258*(d/2)|0,e=f<k.length?k.length+f:k.length<<1):e=k.length*c;B?(a=new Uint8Array(e),a.set(k)):a=k;return this.a=a};\nV.prototype.z=function(){var b=0,a=this.a,c=this.o,d,e=new (B?Uint8Array:Array)(this.s+(this.b-32768)),f,g,k,h;if(0===c.length)return B?this.a.subarray(32768,this.b):this.a.slice(32768,this.b);f=0;for(g=c.length;f<g;++f){d=c[f];k=0;for(h=d.length;k<h;++k)e[b++]=d[k]}f=32768;for(g=this.b;f<g;++f)e[b++]=a[f];this.o=[];return this.buffer=e};\nV.prototype.O=function(){var b,a=this.b;B?this.K?(b=new Uint8Array(a),b.set(this.a.subarray(0,a))):b=this.a.subarray(0,a):(this.a.length>a&&(this.a.length=a),b=this.a);return this.buffer=b};function mb(b){this.input=b;this.c=0;this.G=[];this.R=!1}\nmb.prototype.i=function(){for(var b=this.input.length;this.c<b;){var a=new ja,c=t,d=t,e=t,f=t,g=t,k=t,h=t,m=t,r=t,p=this.input,l=this.c;a.C=p[l++];a.D=p[l++];(31!==a.C||139!==a.D)&&q(Error(\"invalid file signature:\"+a.C+\",\"+a.D));a.v=p[l++];switch(a.v){case 8:break;default:q(Error(\"unknown compression method: \"+a.v))}a.n=p[l++];m=p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24;a.$=new Date(1E3*m);a.ba=p[l++];a.aa=p[l++];0<(a.n&4)&&(a.W=p[l++]|p[l++]<<8,l+=a.W);if(0<(a.n&Ca)){h=[];for(k=0;0<(g=p[l++]);)h[k++]=\nString.fromCharCode(g);a.name=h.join(\"\")}if(0<(a.n&Da)){h=[];for(k=0;0<(g=p[l++]);)h[k++]=String.fromCharCode(g);a.w=h.join(\"\")}0<(a.n&Ea)&&(a.P=ha(p,0,l)&65535,a.P!==(p[l++]|p[l++]<<8)&&q(Error(\"invalid header crc16\")));c=p[p.length-4]|p[p.length-3]<<8|p[p.length-2]<<16|p[p.length-1]<<24;p.length-l-4-4<512*c&&(f=c);d=new V(p,{index:l,bufferSize:f});a.data=e=d.i();l=d.c;a.Y=r=(p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24)>>>0;ha(e,t,t)!==r&&q(Error(\"invalid CRC-32 checksum: 0x\"+ha(e,t,t).toString(16)+\" / 0x\"+\nr.toString(16)));a.Z=c=(p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24)>>>0;(e.length&4294967295)!==c&&q(Error(\"invalid input size: \"+(e.length&4294967295)+\" / \"+c));this.G.push(a);this.c=l}this.R=v;var n=this.G,s,u,w=0,C=0,x;s=0;for(u=n.length;s<u;++s)C+=n[s].data.length;if(B){x=new Uint8Array(C);for(s=0;s<u;++s)x.set(n[s].data,w),w+=n[s].data.length}else{x=[];for(s=0;s<u;++s)x[s]=n[s].data;x=Array.prototype.concat.apply([],x)}return x};function nb(b){if(\"string\"===typeof b){var a=b.split(\"\"),c,d;c=0;for(d=a.length;c<d;c++)a[c]=(a[c].charCodeAt(0)&255)>>>0;b=a}for(var e=1,f=0,g=b.length,k,h=0;0<g;){k=1024<g?1024:g;g-=k;do e+=b[h++],f+=e;while(--k);e%=65521;f%=65521}return(f<<16|e)>>>0};function ob(b,a){var c,d;this.input=b;this.c=0;if(a||!(a={}))a.index&&(this.c=a.index),a.verify&&(this.V=a.verify);c=b[this.c++];d=b[this.c++];switch(c&15){case pb:this.method=pb;break;default:q(Error(\"unsupported compression method\"))}0!==((c<<8)+d)%31&&q(Error(\"invalid fcheck flag:\"+((c<<8)+d)%31));d&32&&q(Error(\"fdict flag is not supported\"));this.J=new V(b,{index:this.c,bufferSize:a.bufferSize,bufferType:a.bufferType,resize:a.resize})}\nob.prototype.i=function(){var b=this.input,a,c;a=this.J.i();this.c=this.J.c;this.V&&(c=(b[this.c++]<<24|b[this.c++]<<16|b[this.c++]<<8|b[this.c++])>>>0,c!==nb(a)&&q(Error(\"invalid adler-32 checksum\")));return a};var pb=8;function rb(b,a){this.input=b;this.a=new (B?Uint8Array:Array)(32768);this.k=sb.t;var c={},d;if((a||!(a={}))&&\"number\"===typeof a.compressionType)this.k=a.compressionType;for(d in a)c[d]=a[d];c.outputBuffer=this.a;this.I=new na(this.input,c)}var sb=pa;\nrb.prototype.h=function(){var b,a,c,d,e,f,g,k=0;g=this.a;b=pb;switch(b){case pb:a=Math.LOG2E*Math.log(32768)-8;break;default:q(Error(\"invalid compression method\"))}c=a<<4|b;g[k++]=c;switch(b){case pb:switch(this.k){case sb.NONE:e=0;break;case sb.L:e=1;break;case sb.t:e=2;break;default:q(Error(\"unsupported compression type\"))}break;default:q(Error(\"invalid compression method\"))}d=e<<6|0;g[k++]=d|31-(256*c+d)%31;f=nb(this.input);this.I.b=k;g=this.I.h();k=g.length;B&&(g=new Uint8Array(g.buffer),g.length<=\nk+4&&(this.a=new Uint8Array(g.length+4),this.a.set(g),g=this.a),g=g.subarray(0,k+4));g[k++]=f>>24&255;g[k++]=f>>16&255;g[k++]=f>>8&255;g[k++]=f&255;return g};exports.deflate=tb;exports.deflateSync=ub;exports.inflate=vb;exports.inflateSync=wb;exports.gzip=xb;exports.gzipSync=yb;exports.gunzip=zb;exports.gunzipSync=Ab;function tb(b,a,c){process.nextTick(function(){var d,e;try{e=ub(b,c)}catch(f){d=f}a(d,e)})}function ub(b,a){var c;c=(new rb(b)).h();a||(a={});return a.H?c:Bb(c)}function vb(b,a,c){process.nextTick(function(){var d,e;try{e=wb(b,c)}catch(f){d=f}a(d,e)})}\nfunction wb(b,a){var c;b.subarray=b.slice;c=(new ob(b)).i();a||(a={});return a.noBuffer?c:Bb(c)}function xb(b,a,c){process.nextTick(function(){var d,e;try{e=yb(b,c)}catch(f){d=f}a(d,e)})}function yb(b,a){var c;b.subarray=b.slice;c=(new Ba(b)).h();a||(a={});return a.H?c:Bb(c)}function zb(b,a,c){process.nextTick(function(){var d,e;try{e=Ab(b,c)}catch(f){d=f}a(d,e)})}function Ab(b,a){var c;b.subarray=b.slice;c=(new mb(b)).i();a||(a={});return a.H?c:Bb(c)}\nfunction Bb(b){var a=new Buffer(b.length),c,d;c=0;for(d=b.length;c<d;++c)a[c]=b[c];return a};}).call(this);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","const bmp = require('bmp-js');\nconst fileType = require('file-type');\n\nmodule.exports = (TessModule, iBuf, yres = 70) => {\n  const buf = Buffer.from(iBuf);\n  const type = fileType(buf);\n  let bytesPerPixel = 0;\n  let data = null;\n  let pix = null;\n  let w = 0;\n  let h = 0;\n\n  /*\n   * Although leptonica should support reading bmp, there is a bug of \"compressed BMP files\".\n   * As there is no solution, we need to use bmp-js for now.\n   * @see https://groups.google.com/forum/#!topic/tesseract-ocr/4mPD9zTxdxE\n   */\n  if (type && type.mime === 'image/bmp') {\n    const bmpBuf = bmp.decode(buf);\n    data = TessModule._malloc(bmpBuf.data.length * Uint8Array.BYTES_PER_ELEMENT);\n    TessModule.HEAPU8.set(bmpBuf.data, data);\n    w = bmpBuf.width;\n    h = bmpBuf.height;\n    bytesPerPixel = 4;\n  } else {\n    const ptr = TessModule._malloc(buf.length * Uint8Array.BYTES_PER_ELEMENT);\n    TessModule.HEAPU8.set(buf, ptr);\n    pix = TessModule._pixReadMem(ptr, buf.length);\n    if (TessModule.getValue(pix + (7 * 4), 'i32') === 0) {\n      /*\n       * Set a yres default value to prevent warning from tesseract\n       * See kMinCredibleResolution in tesseract/src/ccstruct/publictypes.h\n       */\n      TessModule.setValue(pix + (7 * 4), yres, 'i32');\n    }\n    [w, h] = Array(2).fill(0)\n      .map((v, idx) => (\n        TessModule.getValue(pix + (idx * 4), 'i32')\n      ));\n  }\n\n  return {\n    w,\n    h,\n    bytesPerPixel,\n    data,\n    pix,\n  };\n};\n","/**\n * @author shaozilee\n *\n * support 1bit 4bit 8bit 24bit decode\n * encode with 24bit\n * \n */\n\nvar encode = require('./lib/encoder'),\n    decode = require('./lib/decoder');\n\nmodule.exports = {\n  encode: encode,\n  decode: decode\n};\n","/**\n * @author shaozilee\n *\n * BMP format encoder,encode 24bit BMP\n * Not support quality compression\n *\n */\n\nfunction BmpEncoder(imgData){\n\tthis.buffer = imgData.data;\n\tthis.width = imgData.width;\n\tthis.height = imgData.height;\n\tthis.extraBytes = this.width%4;\n\tthis.rgbSize = this.height*(3*this.width+this.extraBytes);\n\tthis.headerInfoSize = 40;\n\n\tthis.data = [];\n\t/******************header***********************/\n\tthis.flag = \"BM\";\n\tthis.reserved = 0;\n\tthis.offset = 54;\n\tthis.fileSize = this.rgbSize+this.offset;\n\tthis.planes = 1;\n\tthis.bitPP = 24;\n\tthis.compress = 0;\n\tthis.hr = 0;\n\tthis.vr = 0;\n\tthis.colors = 0;\n\tthis.importantColors = 0;\n}\n\nBmpEncoder.prototype.encode = function() {\n\tvar tempBuffer = new Buffer(this.offset+this.rgbSize);\n\tthis.pos = 0;\n\ttempBuffer.write(this.flag,this.pos,2);this.pos+=2;\n\ttempBuffer.writeUInt32LE(this.fileSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.reserved,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.offset,this.pos);this.pos+=4;\n\n\ttempBuffer.writeUInt32LE(this.headerInfoSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.width,this.pos);this.pos+=4;\n\ttempBuffer.writeInt32LE(-this.height,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt16LE(this.planes,this.pos);this.pos+=2;\n\ttempBuffer.writeUInt16LE(this.bitPP,this.pos);this.pos+=2;\n\ttempBuffer.writeUInt32LE(this.compress,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.rgbSize,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.hr,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.vr,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.colors,this.pos);this.pos+=4;\n\ttempBuffer.writeUInt32LE(this.importantColors,this.pos);this.pos+=4;\n\n\tvar i=0;\n\tvar rowBytes = 3*this.width+this.extraBytes;\n\n\tfor (var y = 0; y <this.height; y++){\n\t\tfor (var x = 0; x < this.width; x++){\n\t\t\tvar p = this.pos+y*rowBytes+x*3;\n\t\t\ti++;//a\n\t\t\ttempBuffer[p]= this.buffer[i++];//b\n\t\t\ttempBuffer[p+1] = this.buffer[i++];//g\n\t\t\ttempBuffer[p+2]  = this.buffer[i++];//r\n\t\t}\n\t\tif(this.extraBytes>0){\n\t\t\tvar fillOffset = this.pos+y*rowBytes+this.width*3;\n\t\t\ttempBuffer.fill(0,fillOffset,fillOffset+this.extraBytes);\n\t\t}\n\t}\n\n\treturn tempBuffer;\n};\n\nmodule.exports = function(imgData, quality) {\n  if (typeof quality === 'undefined') quality = 100;\n \tvar encoder = new BmpEncoder(imgData);\n\tvar data = encoder.encode();\n  return {\n    data: data,\n    width: imgData.width,\n    height: imgData.height\n  };\n};\n","/**\n * @author shaozilee\n *\n * Bmp format decoder,support 1bit 4bit 8bit 24bit bmp\n *\n */\n\nfunction BmpDecoder(buffer,is_with_alpha) {\n  this.pos = 0;\n  this.buffer = buffer;\n  this.is_with_alpha = !!is_with_alpha;\n  this.bottom_up = true;\n  this.flag = this.buffer.toString(\"utf-8\", 0, this.pos += 2);\n  if (this.flag != \"BM\") throw new Error(\"Invalid BMP File\");\n  this.parseHeader();\n  this.parseRGBA();\n}\n\nBmpDecoder.prototype.parseHeader = function() {\n  this.fileSize = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.reserved = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.offset = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.headerSize = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.width = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.height = this.buffer.readInt32LE(this.pos);\n  this.pos += 4;\n  this.planes = this.buffer.readUInt16LE(this.pos);\n  this.pos += 2;\n  this.bitPP = this.buffer.readUInt16LE(this.pos);\n  this.pos += 2;\n  this.compress = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.rawSize = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.hr = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.vr = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.colors = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n  this.importantColors = this.buffer.readUInt32LE(this.pos);\n  this.pos += 4;\n\n  if(this.bitPP === 16 && this.is_with_alpha){\n    this.bitPP = 15\n  }\n  if (this.bitPP < 15) {\n    var len = this.colors === 0 ? 1 << this.bitPP : this.colors;\n    this.palette = new Array(len);\n    for (var i = 0; i < len; i++) {\n      var blue = this.buffer.readUInt8(this.pos++);\n      var green = this.buffer.readUInt8(this.pos++);\n      var red = this.buffer.readUInt8(this.pos++);\n      var quad = this.buffer.readUInt8(this.pos++);\n      this.palette[i] = {\n        red: red,\n        green: green,\n        blue: blue,\n        quad: quad\n      };\n    }\n  }\n  if(this.height < 0) {\n    this.height *= -1;\n    this.bottom_up = false;\n  }\n\n}\n\nBmpDecoder.prototype.parseRGBA = function() {\n    var bitn = \"bit\" + this.bitPP;\n    var len = this.width * this.height * 4;\n    this.data = new Buffer(len);\n    this[bitn]();\n};\n\nBmpDecoder.prototype.bit1 = function() {\n  var xlen = Math.ceil(this.width / 8);\n  var mode = xlen%4;\n  var y = this.height >= 0 ? this.height - 1 : -this.height\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y\n    for (var x = 0; x < xlen; x++) {\n      var b = this.buffer.readUInt8(this.pos++);\n      var location = line * this.width * 4 + x*8*4;\n      for (var i = 0; i < 8; i++) {\n        if(x*8+i<this.width){\n          var rgb = this.palette[((b>>(7-i))&0x1)];\n\n          this.data[location+i*4] = 0;\n          this.data[location+i*4 + 1] = rgb.blue;\n          this.data[location+i*4 + 2] = rgb.green;\n          this.data[location+i*4 + 3] = rgb.red;\n\n        }else{\n          break;\n        }\n      }\n    }\n\n    if (mode != 0){\n      this.pos+=(4 - mode);\n    }\n  }\n};\n\nBmpDecoder.prototype.bit4 = function() {\n    //RLE-4\n    if(this.compress == 2){\n        this.data.fill(0xff);\n\n        var location = 0;\n        var lines = this.bottom_up?this.height-1:0;\n        var low_nibble = false;//for all count of pixel\n\n        while(location<this.data.length){\n            var a = this.buffer.readUInt8(this.pos++);\n            var b = this.buffer.readUInt8(this.pos++);\n            //absolute mode\n            if(a == 0){\n                if(b == 0){//line end\n                    if(this.bottom_up){\n                        lines--;\n                    }else{\n                        lines++;\n                    }\n                    location = lines*this.width*4;\n                    low_nibble = false;\n                    continue;\n                }else if(b == 1){//image end\n                    break;\n                }else if(b ==2){\n                    //offset x,y\n                    var x = this.buffer.readUInt8(this.pos++);\n                    var y = this.buffer.readUInt8(this.pos++);\n                    if(this.bottom_up){\n                        lines-=y;\n                    }else{\n                        lines+=y;\n                    }\n\n                    location +=(y*this.width*4+x*4);\n                }else{\n                    var c = this.buffer.readUInt8(this.pos++);\n                    for(var i=0;i<b;i++){\n                        if (low_nibble) {\n                            setPixelData.call(this, (c & 0x0f));\n                        } else {\n                            setPixelData.call(this, (c & 0xf0)>>4);\n                        }\n\n                        if ((i & 1) && (i+1 < b)){\n                            c = this.buffer.readUInt8(this.pos++);\n                        }\n\n                        low_nibble = !low_nibble;\n                    }\n\n                    if ((((b+1) >> 1) & 1 ) == 1){\n                        this.pos++\n                    }\n                }\n\n            }else{//encoded mode\n                for (var i = 0; i < a; i++) {\n                    if (low_nibble) {\n                        setPixelData.call(this, (b & 0x0f));\n                    } else {\n                        setPixelData.call(this, (b & 0xf0)>>4);\n                    }\n                    low_nibble = !low_nibble;\n                }\n            }\n\n        }\n\n\n\n\n        function setPixelData(rgbIndex){\n            var rgb = this.palette[rgbIndex];\n            this.data[location] = 0;\n            this.data[location + 1] = rgb.blue;\n            this.data[location + 2] = rgb.green;\n            this.data[location + 3] = rgb.red;\n            location+=4;\n        }\n    }else{\n\n      var xlen = Math.ceil(this.width/2);\n      var mode = xlen%4;\n      for (var y = this.height - 1; y >= 0; y--) {\n        var line = this.bottom_up ? y : this.height - 1 - y\n        for (var x = 0; x < xlen; x++) {\n          var b = this.buffer.readUInt8(this.pos++);\n          var location = line * this.width * 4 + x*2*4;\n\n          var before = b>>4;\n          var after = b&0x0F;\n\n          var rgb = this.palette[before];\n          this.data[location] = 0;\n          this.data[location + 1] = rgb.blue;\n          this.data[location + 2] = rgb.green;\n          this.data[location + 3] = rgb.red;\n\n\n          if(x*2+1>=this.width)break;\n\n          rgb = this.palette[after];\n\n          this.data[location+4] = 0;\n          this.data[location+4 + 1] = rgb.blue;\n          this.data[location+4 + 2] = rgb.green;\n          this.data[location+4 + 3] = rgb.red;\n\n        }\n\n        if (mode != 0){\n          this.pos+=(4 - mode);\n        }\n      }\n\n    }\n\n};\n\nBmpDecoder.prototype.bit8 = function() {\n    //RLE-8\n    if(this.compress == 1){\n        this.data.fill(0xff);\n\n        var location = 0;\n        var lines = this.bottom_up?this.height-1:0;\n\n        while(location<this.data.length){\n            var a = this.buffer.readUInt8(this.pos++);\n            var b = this.buffer.readUInt8(this.pos++);\n            //absolute mode\n            if(a == 0){\n                if(b == 0){//line end\n                    if(this.bottom_up){\n                        lines--;\n                    }else{\n                        lines++;\n                    }\n                    location = lines*this.width*4;\n                    continue;\n                }else if(b == 1){//image end\n                    break;\n                }else if(b ==2){\n                    //offset x,y\n                    var x = this.buffer.readUInt8(this.pos++);\n                    var y = this.buffer.readUInt8(this.pos++);\n                    if(this.bottom_up){\n                        lines-=y;\n                    }else{\n                        lines+=y;\n                    }\n\n                    location +=(y*this.width*4+x*4);\n                }else{\n                    for(var i=0;i<b;i++){\n                        var c = this.buffer.readUInt8(this.pos++);\n                        setPixelData.call(this, c);\n                    }\n                    if(b&1 == 1){\n                        this.pos++;\n                    }\n\n                }\n\n            }else{//encoded mode\n                for (var i = 0; i < a; i++) {\n                    setPixelData.call(this, b);\n                }\n            }\n\n        }\n\n\n\n\n        function setPixelData(rgbIndex){\n            var rgb = this.palette[rgbIndex];\n            this.data[location] = 0;\n            this.data[location + 1] = rgb.blue;\n            this.data[location + 2] = rgb.green;\n            this.data[location + 3] = rgb.red;\n            location+=4;\n        }\n    }else {\n        var mode = this.width % 4;\n        for (var y = this.height - 1; y >= 0; y--) {\n            var line = this.bottom_up ? y : this.height - 1 - y\n            for (var x = 0; x < this.width; x++) {\n                var b = this.buffer.readUInt8(this.pos++);\n                var location = line * this.width * 4 + x * 4;\n                if (b < this.palette.length) {\n                    var rgb = this.palette[b];\n\n                    this.data[location] = 0;\n                    this.data[location + 1] = rgb.blue;\n                    this.data[location + 2] = rgb.green;\n                    this.data[location + 3] = rgb.red;\n\n                } else {\n                    this.data[location] = 0;\n                    this.data[location + 1] = 0xFF;\n                    this.data[location + 2] = 0xFF;\n                    this.data[location + 3] = 0xFF;\n                }\n            }\n            if (mode != 0) {\n                this.pos += (4 - mode);\n            }\n        }\n    }\n};\n\nBmpDecoder.prototype.bit15 = function() {\n  var dif_w =this.width % 3;\n  var _11111 = parseInt(\"11111\", 2),_1_5 = _11111;\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y\n    for (var x = 0; x < this.width; x++) {\n\n      var B = this.buffer.readUInt16LE(this.pos);\n      this.pos+=2;\n      var blue = (B & _1_5) / _1_5 * 255 | 0;\n      var green = (B >> 5 & _1_5 ) / _1_5 * 255 | 0;\n      var red = (B >> 10 & _1_5) / _1_5 * 255 | 0;\n      var alpha = (B>>15)?0xFF:0x00;\n\n      var location = line * this.width * 4 + x * 4;\n\n      this.data[location] = alpha;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit16 = function() {\n  var dif_w =(this.width % 2)*2;\n  //default xrgb555\n  this.maskRed = 0x7C00;\n  this.maskGreen = 0x3E0;\n  this.maskBlue =0x1F;\n  this.mask0 = 0;\n\n  if(this.compress == 3){\n    this.maskRed = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n    this.maskGreen = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n    this.maskBlue = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n    this.mask0 = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n  }\n\n\n  var ns=[0,0,0];\n  for (var i=0;i<16;i++){\n    if ((this.maskRed>>i)&0x01) ns[0]++;\n    if ((this.maskGreen>>i)&0x01) ns[1]++;\n    if ((this.maskBlue>>i)&0x01) ns[2]++;\n  }\n  ns[1]+=ns[0]; ns[2]+=ns[1];\tns[0]=8-ns[0]; ns[1]-=8; ns[2]-=8;\n\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y;\n    for (var x = 0; x < this.width; x++) {\n\n      var B = this.buffer.readUInt16LE(this.pos);\n      this.pos+=2;\n\n      var blue = (B&this.maskBlue)<<ns[0];\n      var green = (B&this.maskGreen)>>ns[1];\n      var red = (B&this.maskRed)>>ns[2];\n\n      var location = line * this.width * 4 + x * 4;\n\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += dif_w;\n  }\n};\n\nBmpDecoder.prototype.bit24 = function() {\n  for (var y = this.height - 1; y >= 0; y--) {\n    var line = this.bottom_up ? y : this.height - 1 - y\n    for (var x = 0; x < this.width; x++) {\n      //Little Endian rgb\n      var blue = this.buffer.readUInt8(this.pos++);\n      var green = this.buffer.readUInt8(this.pos++);\n      var red = this.buffer.readUInt8(this.pos++);\n      var location = line * this.width * 4 + x * 4;\n      this.data[location] = 0;\n      this.data[location + 1] = blue;\n      this.data[location + 2] = green;\n      this.data[location + 3] = red;\n    }\n    //skip extra bytes\n    this.pos += (this.width % 4);\n  }\n\n};\n\n/**\n * add 32bit decode func\n * @author soubok\n */\nBmpDecoder.prototype.bit32 = function() {\n  //BI_BITFIELDS\n  if(this.compress == 3){\n    this.maskRed = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n    this.maskGreen = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n    this.maskBlue = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n    this.mask0 = this.buffer.readUInt32LE(this.pos);\n    this.pos+=4;\n      for (var y = this.height - 1; y >= 0; y--) {\n          var line = this.bottom_up ? y : this.height - 1 - y;\n          for (var x = 0; x < this.width; x++) {\n              //Little Endian rgba\n              var alpha = this.buffer.readUInt8(this.pos++);\n              var blue = this.buffer.readUInt8(this.pos++);\n              var green = this.buffer.readUInt8(this.pos++);\n              var red = this.buffer.readUInt8(this.pos++);\n              var location = line * this.width * 4 + x * 4;\n              this.data[location] = alpha;\n              this.data[location + 1] = blue;\n              this.data[location + 2] = green;\n              this.data[location + 3] = red;\n          }\n      }\n\n  }else{\n      for (var y = this.height - 1; y >= 0; y--) {\n          var line = this.bottom_up ? y : this.height - 1 - y;\n          for (var x = 0; x < this.width; x++) {\n              //Little Endian argb\n              var blue = this.buffer.readUInt8(this.pos++);\n              var green = this.buffer.readUInt8(this.pos++);\n              var red = this.buffer.readUInt8(this.pos++);\n              var alpha = this.buffer.readUInt8(this.pos++);\n              var location = line * this.width * 4 + x * 4;\n              this.data[location] = alpha;\n              this.data[location + 1] = blue;\n              this.data[location + 2] = green;\n              this.data[location + 3] = red;\n          }\n      }\n\n  }\n\n\n\n\n};\n\nBmpDecoder.prototype.getData = function() {\n  return this.data;\n};\n\nmodule.exports = function(bmpData) {\n  var decoder = new BmpDecoder(bmpData);\n  return decoder;\n};\n","'use strict';\nconst toBytes = s => [...s].map(c => c.charCodeAt(0));\nconst xpiZipFilename = toBytes('META-INF/mozilla.rsa');\nconst oxmlContentTypes = toBytes('[Content_Types].xml');\nconst oxmlRels = toBytes('_rels/.rels');\n\nfunction readUInt64LE(buf, offset = 0) {\n\tlet n = buf[offset];\n\tlet mul = 1;\n\tlet i = 0;\n\twhile (++i < 8) {\n\t\tmul *= 0x100;\n\t\tn += buf[offset + i] * mul;\n\t}\n\n\treturn n;\n}\n\nconst fileType = input => {\n\tif (!(input instanceof Uint8Array || input instanceof ArrayBuffer || Buffer.isBuffer(input))) {\n\t\tthrow new TypeError(`Expected the \\`input\\` argument to be of type \\`Uint8Array\\` or \\`Buffer\\` or \\`ArrayBuffer\\`, got \\`${typeof input}\\``);\n\t}\n\n\tconst buf = input instanceof Uint8Array ? input : new Uint8Array(input);\n\n\tif (!(buf && buf.length > 1)) {\n\t\treturn null;\n\t}\n\n\tconst check = (header, options) => {\n\t\toptions = Object.assign({\n\t\t\toffset: 0\n\t\t}, options);\n\n\t\tfor (let i = 0; i < header.length; i++) {\n\t\t\t// If a bitmask is set\n\t\t\tif (options.mask) {\n\t\t\t\t// If header doesn't equal `buf` with bits masked off\n\t\t\t\tif (header[i] !== (options.mask[i] & buf[i + options.offset])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (header[i] !== buf[i + options.offset]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tconst checkString = (header, options) => check(toBytes(header), options);\n\n\tif (check([0xFF, 0xD8, 0xFF])) {\n\t\treturn {\n\t\t\text: 'jpg',\n\t\t\tmime: 'image/jpeg'\n\t\t};\n\t}\n\n\tif (check([0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\treturn {\n\t\t\text: 'png',\n\t\t\tmime: 'image/png'\n\t\t};\n\t}\n\n\tif (check([0x47, 0x49, 0x46])) {\n\t\treturn {\n\t\t\text: 'gif',\n\t\t\tmime: 'image/gif'\n\t\t};\n\t}\n\n\tif (check([0x57, 0x45, 0x42, 0x50], {offset: 8})) {\n\t\treturn {\n\t\t\text: 'webp',\n\t\t\tmime: 'image/webp'\n\t\t};\n\t}\n\n\tif (check([0x46, 0x4C, 0x49, 0x46])) {\n\t\treturn {\n\t\t\text: 'flif',\n\t\t\tmime: 'image/flif'\n\t\t};\n\t}\n\n\t// Needs to be before `tif` check\n\tif (\n\t\t(check([0x49, 0x49, 0x2A, 0x0]) || check([0x4D, 0x4D, 0x0, 0x2A])) &&\n\t\tcheck([0x43, 0x52], {offset: 8})\n\t) {\n\t\treturn {\n\t\t\text: 'cr2',\n\t\t\tmime: 'image/x-canon-cr2'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x49, 0x49, 0x2A, 0x0]) ||\n\t\tcheck([0x4D, 0x4D, 0x0, 0x2A])\n\t) {\n\t\treturn {\n\t\t\text: 'tif',\n\t\t\tmime: 'image/tiff'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4D])) {\n\t\treturn {\n\t\t\text: 'bmp',\n\t\t\tmime: 'image/bmp'\n\t\t};\n\t}\n\n\tif (check([0x49, 0x49, 0xBC])) {\n\t\treturn {\n\t\t\text: 'jxr',\n\t\t\tmime: 'image/vnd.ms-photo'\n\t\t};\n\t}\n\n\tif (check([0x38, 0x42, 0x50, 0x53])) {\n\t\treturn {\n\t\t\text: 'psd',\n\t\t\tmime: 'image/vnd.adobe.photoshop'\n\t\t};\n\t}\n\n\t// Zip-based file formats\n\t// Need to be before the `zip` check\n\tif (check([0x50, 0x4B, 0x3, 0x4])) {\n\t\tif (\n\t\t\tcheck([0x6D, 0x69, 0x6D, 0x65, 0x74, 0x79, 0x70, 0x65, 0x61, 0x70, 0x70, 0x6C, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x65, 0x70, 0x75, 0x62, 0x2B, 0x7A, 0x69, 0x70], {offset: 30})\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'epub',\n\t\t\t\tmime: 'application/epub+zip'\n\t\t\t};\n\t\t}\n\n\t\t// Assumes signed `.xpi` from addons.mozilla.org\n\t\tif (check(xpiZipFilename, {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'xpi',\n\t\t\t\tmime: 'application/x-xpinstall'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.text', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'odt',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.text'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.spreadsheet', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'ods',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.spreadsheet'\n\t\t\t};\n\t\t}\n\n\t\tif (checkString('mimetypeapplication/vnd.oasis.opendocument.presentation', {offset: 30})) {\n\t\t\treturn {\n\t\t\t\text: 'odp',\n\t\t\t\tmime: 'application/vnd.oasis.opendocument.presentation'\n\t\t\t};\n\t\t}\n\n\t\t// The docx, xlsx and pptx file types extend the Office Open XML file format:\n\t\t// https://en.wikipedia.org/wiki/Office_Open_XML_file_formats\n\t\t// We look for:\n\t\t// - one entry named '[Content_Types].xml' or '_rels/.rels',\n\t\t// - one entry indicating specific type of file.\n\t\t// MS Office, OpenOffice and LibreOffice may put the parts in different order, so the check should not rely on it.\n\t\tconst findNextZipHeaderIndex = (arr, startAt = 0) => arr.findIndex((el, i, arr) => i >= startAt && arr[i] === 0x50 && arr[i + 1] === 0x4B && arr[i + 2] === 0x3 && arr[i + 3] === 0x4);\n\n\t\tlet zipHeaderIndex = 0; // The first zip header was already found at index 0\n\t\tlet oxmlFound = false;\n\t\tlet type = null;\n\n\t\tdo {\n\t\t\tconst offset = zipHeaderIndex + 30;\n\n\t\t\tif (!oxmlFound) {\n\t\t\t\toxmlFound = (check(oxmlContentTypes, {offset}) || check(oxmlRels, {offset}));\n\t\t\t}\n\n\t\t\tif (!type) {\n\t\t\t\tif (checkString('word/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'docx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n\t\t\t\t\t};\n\t\t\t\t} else if (checkString('ppt/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'pptx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n\t\t\t\t\t};\n\t\t\t\t} else if (checkString('xl/', {offset})) {\n\t\t\t\t\ttype = {\n\t\t\t\t\t\text: 'xlsx',\n\t\t\t\t\t\tmime: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (oxmlFound && type) {\n\t\t\t\treturn type;\n\t\t\t}\n\n\t\t\tzipHeaderIndex = findNextZipHeaderIndex(buf, offset);\n\t\t} while (zipHeaderIndex >= 0);\n\n\t\t// No more zip parts available in the buffer, but maybe we are almost certain about the type?\n\t\tif (type) {\n\t\t\treturn type;\n\t\t}\n\t}\n\n\tif (\n\t\tcheck([0x50, 0x4B]) &&\n\t\t(buf[2] === 0x3 || buf[2] === 0x5 || buf[2] === 0x7) &&\n\t\t(buf[3] === 0x4 || buf[3] === 0x6 || buf[3] === 0x8)\n\t) {\n\t\treturn {\n\t\t\text: 'zip',\n\t\t\tmime: 'application/zip'\n\t\t};\n\t}\n\n\tif (check([0x75, 0x73, 0x74, 0x61, 0x72], {offset: 257})) {\n\t\treturn {\n\t\t\text: 'tar',\n\t\t\tmime: 'application/x-tar'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x52, 0x61, 0x72, 0x21, 0x1A, 0x7]) &&\n\t\t(buf[6] === 0x0 || buf[6] === 0x1)\n\t) {\n\t\treturn {\n\t\t\text: 'rar',\n\t\t\tmime: 'application/x-rar-compressed'\n\t\t};\n\t}\n\n\tif (check([0x1F, 0x8B, 0x8])) {\n\t\treturn {\n\t\t\text: 'gz',\n\t\t\tmime: 'application/gzip'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x5A, 0x68])) {\n\t\treturn {\n\t\t\text: 'bz2',\n\t\t\tmime: 'application/x-bzip2'\n\t\t};\n\t}\n\n\tif (check([0x37, 0x7A, 0xBC, 0xAF, 0x27, 0x1C])) {\n\t\treturn {\n\t\t\text: '7z',\n\t\t\tmime: 'application/x-7z-compressed'\n\t\t};\n\t}\n\n\tif (check([0x78, 0x01])) {\n\t\treturn {\n\t\t\text: 'dmg',\n\t\t\tmime: 'application/x-apple-diskimage'\n\t\t};\n\t}\n\n\tif (check([0x33, 0x67, 0x70, 0x35]) || // 3gp5\n\t\t(\n\t\t\tcheck([0x0, 0x0, 0x0]) && check([0x66, 0x74, 0x79, 0x70], {offset: 4}) &&\n\t\t\t\t(\n\t\t\t\t\tcheck([0x6D, 0x70, 0x34, 0x31], {offset: 8}) || // MP41\n\t\t\t\t\tcheck([0x6D, 0x70, 0x34, 0x32], {offset: 8}) || // MP42\n\t\t\t\t\tcheck([0x69, 0x73, 0x6F, 0x6D], {offset: 8}) || // ISOM\n\t\t\t\t\tcheck([0x69, 0x73, 0x6F, 0x32], {offset: 8}) || // ISO2\n\t\t\t\t\tcheck([0x6D, 0x6D, 0x70, 0x34], {offset: 8}) || // MMP4\n\t\t\t\t\tcheck([0x4D, 0x34, 0x56], {offset: 8}) || // M4V\n\t\t\t\t\tcheck([0x64, 0x61, 0x73, 0x68], {offset: 8}) // DASH\n\t\t\t\t)\n\t\t)) {\n\t\treturn {\n\t\t\text: 'mp4',\n\t\t\tmime: 'video/mp4'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x54, 0x68, 0x64])) {\n\t\treturn {\n\t\t\text: 'mid',\n\t\t\tmime: 'audio/midi'\n\t\t};\n\t}\n\n\t// https://github.com/threatstack/libmagic/blob/master/magic/Magdir/matroska\n\tif (check([0x1A, 0x45, 0xDF, 0xA3])) {\n\t\tconst sliced = buf.subarray(4, 4 + 4096);\n\t\tconst idPos = sliced.findIndex((el, i, arr) => arr[i] === 0x42 && arr[i + 1] === 0x82);\n\n\t\tif (idPos !== -1) {\n\t\t\tconst docTypePos = idPos + 3;\n\t\t\tconst findDocType = type => [...type].every((c, i) => sliced[docTypePos + i] === c.charCodeAt(0));\n\n\t\t\tif (findDocType('matroska')) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'mkv',\n\t\t\t\t\tmime: 'video/x-matroska'\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (findDocType('webm')) {\n\t\t\t\treturn {\n\t\t\t\t\text: 'webm',\n\t\t\t\t\tmime: 'video/webm'\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tif (check([0x0, 0x0, 0x0, 0x14, 0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20]) ||\n\t\tcheck([0x66, 0x72, 0x65, 0x65], {offset: 4}) || // Type: `free`\n\t\tcheck([0x66, 0x74, 0x79, 0x70, 0x71, 0x74, 0x20, 0x20], {offset: 4}) ||\n\t\tcheck([0x6D, 0x64, 0x61, 0x74], {offset: 4}) || // MJPEG\n\t\tcheck([0x6D, 0x6F, 0x6F, 0x76], {offset: 4}) || // Type: `moov`\n\t\tcheck([0x77, 0x69, 0x64, 0x65], {offset: 4})) {\n\t\treturn {\n\t\t\text: 'mov',\n\t\t\tmime: 'video/quicktime'\n\t\t};\n\t}\n\n\t// RIFF file format which might be AVI, WAV, QCP, etc\n\tif (check([0x52, 0x49, 0x46, 0x46])) {\n\t\tif (check([0x41, 0x56, 0x49], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'avi',\n\t\t\t\tmime: 'video/vnd.avi'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x57, 0x41, 0x56, 0x45], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'wav',\n\t\t\t\tmime: 'audio/vnd.wave'\n\t\t\t};\n\t\t}\n\n\t\t// QLCM, QCP file\n\t\tif (check([0x51, 0x4C, 0x43, 0x4D], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'qcp',\n\t\t\t\tmime: 'audio/qcelp'\n\t\t\t};\n\t\t}\n\t}\n\n\t// ASF_Header_Object first 80 bytes\n\tif (check([0x30, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11, 0xA6, 0xD9])) {\n\t\t// Search for header should be in first 1KB of file.\n\n\t\tlet offset = 30;\n\t\tdo {\n\t\t\tconst objectSize = readUInt64LE(buf, offset + 16);\n\t\t\tif (check([0x91, 0x07, 0xDC, 0xB7, 0xB7, 0xA9, 0xCF, 0x11, 0x8E, 0xE6, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65], {offset})) {\n\t\t\t\t// Sync on Stream-Properties-Object (B7DC0791-A9B7-11CF-8EE6-00C00C205365)\n\t\t\t\tif (check([0x40, 0x9E, 0x69, 0xF8, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {offset: offset + 24})) {\n\t\t\t\t\t// Found audio:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'wma',\n\t\t\t\t\t\tmime: 'audio/x-ms-wma'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tif (check([0xC0, 0xEF, 0x19, 0xBC, 0x4D, 0x5B, 0xCF, 0x11, 0xA8, 0xFD, 0x00, 0x80, 0x5F, 0x5C, 0x44, 0x2B], {offset: offset + 24})) {\n\t\t\t\t\t// Found video:\n\t\t\t\t\treturn {\n\t\t\t\t\t\text: 'wmv',\n\t\t\t\t\t\tmime: 'video/x-ms-asf'\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\toffset += objectSize;\n\t\t} while (offset + 24 <= buf.length);\n\n\t\t// Default to ASF generic extension\n\t\treturn {\n\t\t\text: 'asf',\n\t\t\tmime: 'application/vnd.ms-asf'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x0, 0x0, 0x1, 0xBA]) ||\n\t\tcheck([0x0, 0x0, 0x1, 0xB3])\n\t) {\n\t\treturn {\n\t\t\text: 'mpg',\n\t\t\tmime: 'video/mpeg'\n\t\t};\n\t}\n\n\tif (check([0x66, 0x74, 0x79, 0x70, 0x33, 0x67], {offset: 4})) {\n\t\treturn {\n\t\t\text: '3gp',\n\t\t\tmime: 'video/3gpp'\n\t\t};\n\t}\n\n\t// Check for MPEG header at different starting offsets\n\tfor (let start = 0; start < 2 && start < (buf.length - 16); start++) {\n\t\tif (\n\t\t\tcheck([0x49, 0x44, 0x33], {offset: start}) || // ID3 header\n\t\t\tcheck([0xFF, 0xE2], {offset: start, mask: [0xFF, 0xE2]}) // MPEG 1 or 2 Layer 3 header\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp3',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xE4], {offset: start, mask: [0xFF, 0xE4]}) // MPEG 1 or 2 Layer 2 header\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp2',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xF8], {offset: start, mask: [0xFF, 0xFC]}) // MPEG 2 layer 0 using ADTS\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp2',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\n\t\tif (\n\t\t\tcheck([0xFF, 0xF0], {offset: start, mask: [0xFF, 0xFC]}) // MPEG 4 layer 0 using ADTS\n\t\t) {\n\t\t\treturn {\n\t\t\t\text: 'mp4',\n\t\t\t\tmime: 'audio/mpeg'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\tcheck([0x66, 0x74, 0x79, 0x70, 0x4D, 0x34, 0x41], {offset: 4})\n\t) {\n\t\treturn { // MPEG-4 layer 3 (audio)\n\t\t\text: 'm4a',\n\t\t\tmime: 'audio/mp4' // RFC 4337\n\t\t};\n\t}\n\n\t// Needs to be before `ogg` check\n\tif (check([0x4F, 0x70, 0x75, 0x73, 0x48, 0x65, 0x61, 0x64], {offset: 28})) {\n\t\treturn {\n\t\t\text: 'opus',\n\t\t\tmime: 'audio/opus'\n\t\t};\n\t}\n\n\t// If 'OggS' in first  bytes, then OGG container\n\tif (check([0x4F, 0x67, 0x67, 0x53])) {\n\t\t// This is a OGG container\n\n\t\t// If ' theora' in header.\n\t\tif (check([0x80, 0x74, 0x68, 0x65, 0x6F, 0x72, 0x61], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogv',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01video' in header.\n\t\tif (check([0x01, 0x76, 0x69, 0x64, 0x65, 0x6F, 0x00], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogm',\n\t\t\t\tmime: 'video/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If ' FLAC' in header  https://xiph.org/flac/faq.html\n\t\tif (check([0x7F, 0x46, 0x4C, 0x41, 0x43], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'oga',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// 'Speex  ' in header https://en.wikipedia.org/wiki/Speex\n\t\tif (check([0x53, 0x70, 0x65, 0x65, 0x78, 0x20, 0x20], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'spx',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// If '\\x01vorbis' in header\n\t\tif (check([0x01, 0x76, 0x6F, 0x72, 0x62, 0x69, 0x73], {offset: 28})) {\n\t\t\treturn {\n\t\t\t\text: 'ogg',\n\t\t\t\tmime: 'audio/ogg'\n\t\t\t};\n\t\t}\n\n\t\t// Default OGG container https://www.iana.org/assignments/media-types/application/ogg\n\t\treturn {\n\t\t\text: 'ogx',\n\t\t\tmime: 'application/ogg'\n\t\t};\n\t}\n\n\tif (check([0x66, 0x4C, 0x61, 0x43])) {\n\t\treturn {\n\t\t\text: 'flac',\n\t\t\tmime: 'audio/x-flac'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x41, 0x43, 0x20])) { // 'MAC '\n\t\treturn {\n\t\t\text: 'ape',\n\t\t\tmime: 'audio/ape'\n\t\t};\n\t}\n\n\tif (check([0x77, 0x76, 0x70, 0x6B])) { // 'wvpk'\n\t\treturn {\n\t\t\text: 'wv',\n\t\t\tmime: 'audio/wavpack'\n\t\t};\n\t}\n\n\tif (check([0x23, 0x21, 0x41, 0x4D, 0x52, 0x0A])) {\n\t\treturn {\n\t\t\text: 'amr',\n\t\t\tmime: 'audio/amr'\n\t\t};\n\t}\n\n\tif (check([0x25, 0x50, 0x44, 0x46])) {\n\t\treturn {\n\t\t\text: 'pdf',\n\t\t\tmime: 'application/pdf'\n\t\t};\n\t}\n\n\tif (check([0x4D, 0x5A])) {\n\t\treturn {\n\t\t\text: 'exe',\n\t\t\tmime: 'application/x-msdownload'\n\t\t};\n\t}\n\n\tif (\n\t\t(buf[0] === 0x43 || buf[0] === 0x46) &&\n\t\tcheck([0x57, 0x53], {offset: 1})\n\t) {\n\t\treturn {\n\t\t\text: 'swf',\n\t\t\tmime: 'application/x-shockwave-flash'\n\t\t};\n\t}\n\n\tif (check([0x7B, 0x5C, 0x72, 0x74, 0x66])) {\n\t\treturn {\n\t\t\text: 'rtf',\n\t\t\tmime: 'application/rtf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x61, 0x73, 0x6D])) {\n\t\treturn {\n\t\t\text: 'wasm',\n\t\t\tmime: 'application/wasm'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x77, 0x4F, 0x46, 0x46]) &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff',\n\t\t\tmime: 'font/woff'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x77, 0x4F, 0x46, 0x32]) &&\n\t\t(\n\t\t\tcheck([0x00, 0x01, 0x00, 0x00], {offset: 4}) ||\n\t\t\tcheck([0x4F, 0x54, 0x54, 0x4F], {offset: 4})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'woff2',\n\t\t\tmime: 'font/woff2'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x4C, 0x50], {offset: 34}) &&\n\t\t(\n\t\t\tcheck([0x00, 0x00, 0x01], {offset: 8}) ||\n\t\t\tcheck([0x01, 0x00, 0x02], {offset: 8}) ||\n\t\t\tcheck([0x02, 0x00, 0x02], {offset: 8})\n\t\t)\n\t) {\n\t\treturn {\n\t\t\text: 'eot',\n\t\t\tmime: 'application/vnd.ms-fontobject'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x01, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'ttf',\n\t\t\tmime: 'font/ttf'\n\t\t};\n\t}\n\n\tif (check([0x4F, 0x54, 0x54, 0x4F, 0x00])) {\n\t\treturn {\n\t\t\text: 'otf',\n\t\t\tmime: 'font/otf'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x01, 0x00])) {\n\t\treturn {\n\t\t\text: 'ico',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x02, 0x00])) {\n\t\treturn {\n\t\t\text: 'cur',\n\t\t\tmime: 'image/x-icon'\n\t\t};\n\t}\n\n\tif (check([0x46, 0x4C, 0x56, 0x01])) {\n\t\treturn {\n\t\t\text: 'flv',\n\t\t\tmime: 'video/x-flv'\n\t\t};\n\t}\n\n\tif (check([0x25, 0x21])) {\n\t\treturn {\n\t\t\text: 'ps',\n\t\t\tmime: 'application/postscript'\n\t\t};\n\t}\n\n\tif (check([0xFD, 0x37, 0x7A, 0x58, 0x5A, 0x00])) {\n\t\treturn {\n\t\t\text: 'xz',\n\t\t\tmime: 'application/x-xz'\n\t\t};\n\t}\n\n\tif (check([0x53, 0x51, 0x4C, 0x69])) {\n\t\treturn {\n\t\t\text: 'sqlite',\n\t\t\tmime: 'application/x-sqlite3'\n\t\t};\n\t}\n\n\tif (check([0x4E, 0x45, 0x53, 0x1A])) {\n\t\treturn {\n\t\t\text: 'nes',\n\t\t\tmime: 'application/x-nintendo-nes-rom'\n\t\t};\n\t}\n\n\tif (check([0x43, 0x72, 0x32, 0x34])) {\n\t\treturn {\n\t\t\text: 'crx',\n\t\t\tmime: 'application/x-google-chrome-extension'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x4D, 0x53, 0x43, 0x46]) ||\n\t\tcheck([0x49, 0x53, 0x63, 0x28])\n\t) {\n\t\treturn {\n\t\t\text: 'cab',\n\t\t\tmime: 'application/vnd.ms-cab-compressed'\n\t\t};\n\t}\n\n\t// Needs to be before `ar` check\n\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E, 0x0A, 0x64, 0x65, 0x62, 0x69, 0x61, 0x6E, 0x2D, 0x62, 0x69, 0x6E, 0x61, 0x72, 0x79])) {\n\t\treturn {\n\t\t\text: 'deb',\n\t\t\tmime: 'application/x-deb'\n\t\t};\n\t}\n\n\tif (check([0x21, 0x3C, 0x61, 0x72, 0x63, 0x68, 0x3E])) {\n\t\treturn {\n\t\t\text: 'ar',\n\t\t\tmime: 'application/x-unix-archive'\n\t\t};\n\t}\n\n\tif (check([0xED, 0xAB, 0xEE, 0xDB])) {\n\t\treturn {\n\t\t\text: 'rpm',\n\t\t\tmime: 'application/x-rpm'\n\t\t};\n\t}\n\n\tif (\n\t\tcheck([0x1F, 0xA0]) ||\n\t\tcheck([0x1F, 0x9D])\n\t) {\n\t\treturn {\n\t\t\text: 'Z',\n\t\t\tmime: 'application/x-compress'\n\t\t};\n\t}\n\n\tif (check([0x4C, 0x5A, 0x49, 0x50])) {\n\t\treturn {\n\t\t\text: 'lz',\n\t\t\tmime: 'application/x-lzip'\n\t\t};\n\t}\n\n\tif (check([0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1])) {\n\t\treturn {\n\t\t\text: 'msi',\n\t\t\tmime: 'application/x-msi'\n\t\t};\n\t}\n\n\tif (check([0x06, 0x0E, 0x2B, 0x34, 0x02, 0x05, 0x01, 0x01, 0x0D, 0x01, 0x02, 0x01, 0x01, 0x02])) {\n\t\treturn {\n\t\t\text: 'mxf',\n\t\t\tmime: 'application/mxf'\n\t\t};\n\t}\n\n\tif (check([0x47], {offset: 4}) && (check([0x47], {offset: 192}) || check([0x47], {offset: 196}))) {\n\t\treturn {\n\t\t\text: 'mts',\n\t\t\tmime: 'video/mp2t'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4C, 0x45, 0x4E, 0x44, 0x45, 0x52])) {\n\t\treturn {\n\t\t\text: 'blend',\n\t\t\tmime: 'application/x-blender'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x50, 0x47, 0xFB])) {\n\t\treturn {\n\t\t\text: 'bpg',\n\t\t\tmime: 'image/bpg'\n\t\t};\n\t}\n\n\tif (check([0x00, 0x00, 0x00, 0x0C, 0x6A, 0x50, 0x20, 0x20, 0x0D, 0x0A, 0x87, 0x0A])) {\n\t\t// JPEG-2000 family\n\n\t\tif (check([0x6A, 0x70, 0x32, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jp2',\n\t\t\t\tmime: 'image/jp2'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6A, 0x70, 0x78, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jpx',\n\t\t\t\tmime: 'image/jpx'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6A, 0x70, 0x6D, 0x20], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'jpm',\n\t\t\t\tmime: 'image/jpm'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6D, 0x6A, 0x70, 0x32], {offset: 20})) {\n\t\t\treturn {\n\t\t\t\text: 'mj2',\n\t\t\t\tmime: 'image/mj2'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (check([0x46, 0x4F, 0x52, 0x4D])) {\n\t\treturn {\n\t\t\text: 'aif',\n\t\t\tmime: 'audio/aiff'\n\t\t};\n\t}\n\n\tif (checkString('<?xml ')) {\n\t\treturn {\n\t\t\text: 'xml',\n\t\t\tmime: 'application/xml'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x4F, 0x4F, 0x4B, 0x4D, 0x4F, 0x42, 0x49], {offset: 60})) {\n\t\treturn {\n\t\t\text: 'mobi',\n\t\t\tmime: 'application/x-mobipocket-ebook'\n\t\t};\n\t}\n\n\t// File Type Box (https://en.wikipedia.org/wiki/ISO_base_media_file_format)\n\tif (check([0x66, 0x74, 0x79, 0x70], {offset: 4})) {\n\t\tif (check([0x6D, 0x69, 0x66, 0x31], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heif'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x6D, 0x73, 0x66, 0x31], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heif-sequence'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x68, 0x65, 0x69, 0x63], {offset: 8}) || check([0x68, 0x65, 0x69, 0x78], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heic'\n\t\t\t};\n\t\t}\n\n\t\tif (check([0x68, 0x65, 0x76, 0x63], {offset: 8}) || check([0x68, 0x65, 0x76, 0x78], {offset: 8})) {\n\t\t\treturn {\n\t\t\t\text: 'heic',\n\t\t\t\tmime: 'image/heic-sequence'\n\t\t\t};\n\t\t}\n\t}\n\n\tif (check([0xAB, 0x4B, 0x54, 0x58, 0x20, 0x31, 0x31, 0xBB, 0x0D, 0x0A, 0x1A, 0x0A])) {\n\t\treturn {\n\t\t\text: 'ktx',\n\t\t\tmime: 'image/ktx'\n\t\t};\n\t}\n\n\tif (check([0x44, 0x49, 0x43, 0x4D], {offset: 128})) {\n\t\treturn {\n\t\t\text: 'dcm',\n\t\t\tmime: 'application/dicom'\n\t\t};\n\t}\n\n\t// Musepack, SV7\n\tif (check([0x4D, 0x50, 0x2B])) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\t// Musepack, SV8\n\tif (check([0x4D, 0x50, 0x43, 0x4B])) {\n\t\treturn {\n\t\t\text: 'mpc',\n\t\t\tmime: 'audio/x-musepack'\n\t\t};\n\t}\n\n\tif (check([0x42, 0x45, 0x47, 0x49, 0x4E, 0x3A])) {\n\t\treturn {\n\t\t\text: 'ics',\n\t\t\tmime: 'text/calendar'\n\t\t};\n\t}\n\n\tif (check([0x67, 0x6C, 0x54, 0x46, 0x02, 0x00, 0x00, 0x00])) {\n\t\treturn {\n\t\t\text: 'glb',\n\t\t\tmime: 'model/gltf-binary'\n\t\t};\n\t}\n\n\tif (check([0xD4, 0xC3, 0xB2, 0xA1]) || check([0xA1, 0xB2, 0xC3, 0xD4])) {\n\t\treturn {\n\t\t\text: 'pcap',\n\t\t\tmime: 'application/vnd.tcpdump.pcap'\n\t\t};\n\t}\n\n\treturn null;\n};\n\nmodule.exports = fileType;\n// TODO: Remove this for the next major release\nmodule.exports.default = fileType;\n\nObject.defineProperty(fileType, 'minimumBytes', {value: 4100});\n\nmodule.exports.stream = readableStream => new Promise((resolve, reject) => {\n\t// Using `eval` to work around issues when bundling with Webpack\n\tconst stream = eval('require')('stream'); // eslint-disable-line no-eval\n\n\treadableStream.once('readable', () => {\n\t\tconst pass = new stream.PassThrough();\n\t\tconst chunk = readableStream.read(module.exports.minimumBytes) || readableStream.read();\n\t\ttry {\n\t\t\tpass.fileType = fileType(chunk);\n\t\t} catch (error) {\n\t\t\treject(error);\n\t\t}\n\n\t\treadableStream.unshift(chunk);\n\n\t\tif (stream.pipeline) {\n\t\t\tresolve(stream.pipeline(readableStream, pass, () => {}));\n\t\t} else {\n\t\t\tresolve(readableStream.pipe(pass));\n\t\t}\n\t});\n});\n","/**\n *\n * The core part of tesseract.js to execute the OCR jobs.\n *\n * @fileoverview Worker for OCR jobs\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\nconst check = require('check-types');\nconst resolveURL = process.browser ? require('resolve-url') : s => s;\nconst adapter = require('../node');\nconst circularize = require('./circularize');\nconst TesseractJob = require('./TesseractJob');\n\n/**\n * TesseractWorker\n * @name TesseractWorker\n * @function execute TesseractJob with a queue mechanism\n * @access public\n */\nclass TesseractWorker {\n  /**\n   * constructor\n   *\n   * @name constructor\n   * @function initialize the worker\n   * @access public\n   * @param {object} options - worker configurations\n   * @param {string} options.workerPath -\n   *     A remote path to load worker script.\n   *     In browser-like environment, it is downloaded from a CDN service.\n   *     Please update this option if you self-host the worker script.\n   *     In Node.js environment, this option is not used as the worker script is in local.\n   * @param {string} options.corePath -\n   *     A remote path to load tesseract.js-core script.\n   *     In browser-like environment, it is downloaded from a CDN service.\n   *     Please update this option if you self-host the core script.\n   *     In Node.js environment, this option is not used as the core script is in local.\n   * @param {string} options.langPath -\n   *     A remote path to load *.traineddata.gz, it is download from a CDN service.\n   *     Please update this option if you self-host the worker script.\n   * @param {string} [options.cachePath=.] - @see {@link https://github.com/jeromewu/tesseract.js-utils/blob/master/src/loadLang.js}\n   * @param {string} [options.cacheMethod=write] - @see {@link https://github.com/jeromewu/tesseract.js-utils/blob/master/src/loadLang.js}\n   * @param {string} [options.dataPath=.] - @see {@link https://github.com/jeromewu/tesseract.js-utils/blob/master/src/loadLang.js}\n   *\n   */\n  constructor(options = {}) {\n    this.worker = null;\n    this.options = {\n      ...adapter.defaultOptions,\n      ...options,\n    };\n    ['corePath', 'workerPath', 'langPath'].forEach((key) => {\n      if (check.not.undefined(options[key])) {\n        this.options = { ...this.options, [key]: resolveURL(options[key]) };\n      }\n    });\n    this._currentJob = null;\n    this._queue = [];\n  }\n\n  /**\n   * recognize\n   *\n   * @name recognize\n   * @function recognize text in given image\n   * @access public\n   * @param {Buffer, string} image - image to be recognized\n   * @param {string} [lang=eng] - language to recognize\n   * @param {object} params - tesseract parameters\n   *\n   */\n  recognize(image, lang = 'eng', params = {}) {\n    return this._sendJob('recognize', image, lang, params);\n  }\n\n  /**\n   * detect\n   *\n   * @name detect\n   * @function detect language of the text in the image\n   * @access public\n   * @param {Buffer, string} image - image to be recognized\n   * @param {object} params - tesseract parameters\n   *\n   */\n  detect(image, params = {}) {\n    return this._sendJob('detect', image, 'osd', params);\n  }\n\n  /**\n   * recv\n   *\n   * @name recv\n   * @function handle completed job\n   * @access public\n   * @param {object} packet job data\n   */\n  recv(packet) {\n    if (this._currentJob.id === packet.jobId) {\n      this._currentJob.handle({\n        ...packet,\n        data: packet.status === 'resolve' && packet.action === 'recognize'\n          ? circularize(packet.data)\n          : packet.data,\n      });\n    } else {\n      console.warn(`Job ID ${packet.jobId} not known.`);\n    }\n  }\n\n  /**\n   * dequeue\n   *\n   * @name dequeue\n   * @function dequeue and execute the rear job\n   * @access public\n   */\n  dequeue() {\n    this._currentJob = null;\n    if (this._queue.length) {\n      this._queue[0]();\n    }\n  }\n\n  /**\n   * terminate\n   *\n   * @name terminate\n   * @function terminate the worker\n   * @access public\n   *\n   */\n  terminate() {\n    if (this.worker) {\n      adapter.terminateWorker(this);\n    }\n    this.worker = null;\n    this._currentJob = null;\n    this._queue = [];\n  }\n\n  /**\n   * _sendJob\n   *\n   * @name _sendJob\n   * @function append a new job to the job queue\n   * @access private\n   * @param {string} type job type, should be recognize or detect\n   * @param {Buffer, string} image image to recognize\n   * @param {string} lang language to recognize\n   * @param {object} params tesseract parameters\n   */\n  _sendJob(type, image, lang, params) {\n    return this._delay((job) => {\n      job.send(\n        type,\n        {\n          image,\n          lang,\n          params,\n          options: this.options,\n        },\n      );\n    });\n  }\n\n  /**\n   * _delay\n   *\n   * @name _delay\n   * @function delays the fn to execute until it is on the rear of the queue\n   * @access private\n   * @param {function} fn A handler function for the job\n   */\n  _delay(fn) {\n    if (check.null(this.worker)) {\n      this.worker = adapter.spawnWorker(this, this.options);\n    }\n\n    const job = new TesseractJob(this);\n    this._queue.push(() => {\n      this._queue.shift();\n      this._currentJob = job;\n      fn(job);\n    });\n    if (check.null(this._currentJob)) {\n      this.dequeue();\n    }\n    return job;\n  }\n}\n\nmodule.exports = TesseractWorker;\n","module.exports = {\n  defaultOptions: {\n    /*\n     * default path for downloading *.traineddata, this URL basically\n     * points to a github page, not using jsDelivr as there is is limitation\n     * of 20 MB.\n     */\n    langPath: 'https://tessdata.projectnaptha.com/4.0.0',\n  },\n};\n","/**\n * The result of dump.js is a big JSON tree\n * which can be easily serialized (for instance\n * to be sent from a webworker to the main app\n * or through Node's IPC), but we want\n * a (circular) DOM-like interface for walking\n * through the data.\n *\n * @fileoverview DOM-like interface for walking through data\n * @author Kevin Kwok <antimatter15@gmail.com>\n * @author Guillermo Webster <gui@mit.edu>\n * @author Jerome Wu <jeromewus@gmail.com>\n */\n\nmodule.exports = (iPage) => {\n  const page = {\n    ...iPage,\n    paragraphs: [],\n    lines: [],\n    words: [],\n    symbols: [],\n  };\n\n  page.blocks.forEach((iBlock) => {\n    const block = {\n      ...iBlock,\n      page,\n      lines: [],\n      words: [],\n      symbols: [],\n    };\n\n    block.paragraphs.forEach((iPara) => {\n      const para = {\n        ...iPara,\n        block,\n        page,\n        words: [],\n        symbols: [],\n      };\n\n      para.lines.forEach((iLine) => {\n        const line = {\n          ...iLine,\n          paragraph: para,\n          block,\n          page,\n          symbols: [],\n        };\n\n        line.words.forEach((iWord) => {\n          const word = {\n            ...iWord,\n            line,\n            paragraph: para,\n            block,\n            page,\n          };\n\n          word.symbols.forEach((iSym) => {\n            const sym = {\n              ...iSym,\n              word,\n              line,\n              paragraph: para,\n              block,\n              page,\n            };\n\n            sym.line.symbols.push(sym);\n            sym.paragraph.symbols.push(sym);\n            sym.block.symbols.push(sym);\n            sym.page.symbols.push(sym);\n          });\n          word.paragraph.words.push(word);\n          word.block.words.push(word);\n          word.page.words.push(word);\n        });\n        line.block.lines.push(line);\n        line.page.lines.push(line);\n      });\n      para.page.paragraphs.push(para);\n    });\n  });\n  return page;\n};\n"]}